{"version":3,"sources":["utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["Labels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","testDevice","actionTimeout","language","getLabels","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","loading","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","res","status","event","message","props","title","dataIndex","key","render","text","value","name","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","defaultValue","style","width","lang","Option","Paragraph","editable","authenticationType","connectionType","showIcon","type","closable","columns","getColumns","dataSource","block","disabled","onClick","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","onActionChange","SmartthingsViewDevice","loadingPage","deviceId","prevProps","icon","PoweroffOutlined","onTestClick","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","push","ViewUser","userId","user","u","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","log","onSmartThingsSettingClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","DesktopOutlined","AppstoreAddOutlined","map","UserOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f3a1d3d.chunk.js","sourcesContent":["const Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling Mode 10 Mins',\n  cooling20Mins: 'Cooling Mode 20 Mins',\n  cooling30Mins: 'Cooling Mode 30 Mins',\n  windscreen10Mins: 'Windscreen Mode 10 Mins',\n  windscreen20Mins: 'Windscreen Mode 20 Mins',\n  windscreen30Mins: 'Windscreen Mode 30 Mins',\n  heating10Mins: 'Heating Mode 10 Mins',\n  heating20Mins: 'Heating Mode 20 Mins',\n  heating30Mins: 'Heating Mode 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Test Action',\n  actionTimeout: 'Action Timeout',\n  language: 'Language',\n};\n\nexport function getLabels() {\n  return Labels;\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      actionTimeout: 0,\n      language: 'English',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        language,\n        actionTimeout,\n        shard,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      if (actionTimeout) {\n        copyConfig.actionTimeout = actionTimeout;\n      }\n      if (language) {\n        copyConfig.language = language;\n      }\n      try {\n        let res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n        let status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'shard') {\n              return value;\n            }\n            if (data.name === 'language') {\n              return (\n                <Select\n                  defaultValue={this.state.language}\n                  style={{ width: 200 }}\n                  onChange={(lang) => {\n                    this.setState({ lang, changed: true });\n                  }}\n                >\n                  <Select.Option value=\"English\">English</Select.Option>\n                  <Select.Option value=\"Russian\">Russian</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n        actionTimeout: settings.data.smartthings.timeout,\n        language: settings.data.language || 'English',\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [\n          {\n            name: 'macAddress',\n            value: settings.data.macAddress,\n          },\n          {\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n          {\n            name: 'actionTimeout',\n            value: settings.data.smartthings.timeout,\n          },\n          // {\n          //   name: 'language',\n          //   value: settings.data.language,\n          // },\n        ];\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={() => {\n                this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n};\n","import * as React from 'react';\nimport { Button, Select, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id: deviceId, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onTestClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/testDevice', 'POST', { id: deviceId });\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            } if (data.name === 'deviceId' || data.name === 'deviceLabel') {\n              return value;\n            } if (data.name === 'testDevice') {\n              return (\n                <Button\n                  type=\"primary\"\n                  icon={<PoweroffOutlined />}\n                  loading={this.state.loading}\n                  onClick={() => this.onTestClick()}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n        {\n          name: 'testDevice',\n          value: '',\n        },\n      ];\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport { AppstoreAddOutlined, DesktopOutlined, UserOutlined } from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      const { data } = await fetchBackend('/ui/settings');\n      let settings = JSON.parse(data);\n      if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n        await fetchBackend('/ui/settings/syncDevices');\n      }\n      const res = await fetchBackend('/ui/settings');\n      settings = JSON.parse(res.data);\n      const newState = { settings };\n      if (selectorPage) {\n        newState.selectorPage = selectorPage;\n      }\n      if (id) {\n        newState.componentId = id;\n      }\n      this.setState(newState);\n    }\n\n    onCollapse = (collapsed) => {\n      console.log(collapsed);\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings,\n      } = this.state;\n      return (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}