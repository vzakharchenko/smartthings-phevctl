{"version":3,"sources":["utils/RussianLanguage.js","utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/SmartthingsSMS.js","components/CronSettings.js","components/NotificationSettings.js","components/SmartthingsUPS.js","components/SmartthingsGPIO.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["RussianLabels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","testDevice","actionTimeout","language","modalHelp","modalStep1","modalStep2","modalStep3","modalStep4","modelYear","any","phev2019","battery","updateValue","loading","batteryFactory","doors","forceUpdate","executeUpdate","hvac","sendNotification","notification","testNotification","testNotificationLabel","sms","smsPassword","phone","phoneHuawei","huaweiPassword","huaweiInstallation","huaweiRecieveSMS","huaweiSMS","mikrotikScript","mikrotikScheduler","smsCommands","smsCar","useSmartthings","smsCodes","cron","sendSMSNotification","theft","Yes","No","useCloud","both","onlySMS","onlyPush","none","noneSMS","code","description","name","value","role","noneRole","logout","evseSlow","evseFastCharge","evseDisableCharge","noneUPS","ups","upsMenu","upsInfo","upsMinValue","UPS2","upsMaxTimeHours","ups1H","ups4H","ups5H","ups6H","ups7H","ups8H","ups1D","ups2D","gpioMenu","Labels","mikrotikSMS","huaweiHiLinkSMS","updateDevices","syncDevices","cloudDevices","UPS1","installation","INA219","ups_sh","pullOFF","pullDown","pullUp","risingEdge","fallingEdge","eitherEdge","gpioShutdown","pullUpDownShutdown","edgeShutdown","levelShutdown","getLabels","Cookies","get","setLanguage","set","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","smsType","isModalVisible","gpio","roles","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","enabled","status","res","event","message","props","title","dataIndex","key","render","text","type","icon","QuestionCircleOutlined","onClick","Modal","visible","onCancel","footer","window","open","width","src","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","style","defaultValue","map","r","Option","checked","e","PoweroffOutlined","min","max","step","stringMode","lang","Paragraph","editable","connectionType","authenticationType","push","showIcon","closable","pagination","columns","getColumns","dataSource","block","disabled","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","onActionChange","onActionYearSelectChange","SmartthingsViewDevice","loadingPage","deviceId","updatable","prevProps","onTestClick","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","ViewUser","userId","user","u","SmartthingsSMS","currentHost","secret","Object","keys","command","replace","location","protocol","hostname","portSMS","resp","respHuaweiInst","respHuaweiRecieve","respHuaweiSMS","respHelp","respCodes","unshift","splice","CronSettings","shutdown","NotificationSettings","notifications","forEach","nk","SmartthingsUPS","installation2","loadVoltage","undefined","current","power","percent","timeToShutDown","comp","setInterval","loadData","msToTime","duration","tempTime","moment","months","days","hours","minutes","seconds","upsInfoResp","log","upsSH","respInst","respInst2","respINA219","upsSHResp","SmartthingsGPIO","pullUpDown","edge","level","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","onSmartThingsSettingClick","onSMSClick","onUPSClick","onGPIOClick","onNotificationClick","onCRONClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","size","Title","minHeight","collapsible","theme","defaultSelectedKeys","mode","Item","DesktopOutlined","AppstoreAddOutlined","UserOutlined","MessageOutlined","NotificationOutlined","ScheduleOutlined","LogoutOutlined","href","className","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1851a708.chunk.js","sourcesContent":["export const RussianLabels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Сохранить',\n  settings: 'Настройки',\n  devices: 'Устройства',\n  addDevice: 'Добавить Устройство',\n  users: 'Пользователи',\n  addUser: 'Добавить Пользователя',\n  actionId: 'Действие',\n  deviceLabel: 'Название устройства',\n  cooling10Mins: 'Режим Охлаждения на 10 Мин.',\n  cooling20Mins: 'Режим Охлаждения на 20 Мин.',\n  cooling30Mins: 'Режим Охлаждения на 30 Мин.',\n  windscreen10Mins: 'Обогрев лобового окна на 10 мин.',\n  windscreen20Mins: 'Обогрев лобового окна на 20 мин.',\n  windscreen30Mins: 'Обогрев лобового окна на 30 мин.',\n  heating10Mins: 'Режим Отопителя на 10 мин.',\n  heating20Mins: 'Режим Отопителя на 20 мин.',\n  heating30Mins: 'Режим Отопителя на 30 мин.',\n  airconOn: 'Включить Климат контроль',\n  airconOff: 'Отключить Климат Контроль',\n  headlightsOn: 'Включить Фары',\n  headlightsOff: 'Выключить Фары',\n  parkinglightsOn: 'Включить Парковочные огни',\n  parkinglightsOff: 'Выключить Парковочные огни',\n  username: 'Имя пользователя',\n  password: 'Пароль',\n  delete: 'Удалить',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'MAC адрес',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Протестировать устройство',\n  actionTimeout: 'Максимальное время выполнения ',\n  language: 'Язык',\n  modalHelp: 'Где взять параметр ',\n  modalStep1: '1. Откройте портал ',\n  modalStep2: '2. Выбрать smartapps в вашей локации ',\n  modalStep3: '3. Выберите созданное вами \"remote-ctrl-gsm\" ',\n  modalStep4: '4. Возмите со страницы параметр ',\n  modelYear: 'Год Выпуска PHEV',\n  any: 'Любой',\n  phev2019: '2019',\n  battery: 'Заряд Батареи',\n  updateValue: 'Обновить Текущее Значение',\n  loading: 'Подождите идет загрузка...',\n  batteryFactory: 'Множитель батареи',\n  doors: 'Статус Открытия/Закрытия Дверей',\n  forceUpdate: 'Принудительно обновить модуль',\n  executeUpdate: 'Принудительно обновить перед выполнением',\n  hvac: 'Текущий режим HVAC',\n  sendNotification: 'Отправлять сообщения о состоянии батареи',\n  notification: 'Нотификация',\n  testNotification: 'Проверить отправку сообщений',\n  testNotificationLabel: 'Отправлять Push Уведомления',\n  sms: 'SMS Сервис',\n  smsPassword: 'SMS Пароль',\n  phone: 'Номер мобильного телефона с которого можно слать СМС',\n  phoneHuawei: 'Номер мобильного телефона который будет принимать СМС',\n  huaweiPassword: 'Huawei Авторизация по паролю (Необязательно)',\n  huaweiInstallation: 'Инсталяционный скрипт, пожалуйста запустите от имени root',\n  huaweiRecieveSMS: 'Содержимое файла /opt/modem/recieveSMS.sh',\n  huaweiSMS: 'Содержимое файла /opt/modem/sendSMS.sh',\n  mikrotikScript: 'Mikrotik Script',\n  mikrotikScheduler: 'Mikrotik Scheduler',\n  smsCommands: 'Список поддержуемых SMS операций',\n  smsCar: 'Год Выпуска PHEV в SMS',\n  useSmartthings: 'Использовать Smartthings',\n  smsCodes: 'SMS Коды Ошибок',\n  cron: 'Cron задания',\n  sendSMSNotification: 'Отправлять нотификацию через СМС',\n  theft: 'Активирована ли штатная охранная система сигнализации в ETACS?',\n  Yes: 'Да',\n  No: 'Нет',\n  useCloud: 'отключена Настройка  \"Setup my devices without cloud\" в Smartthings Smartapp',\n  both: 'Оба типа',\n  onlySMS: 'Только СМС',\n  onlyPush: 'Только Push',\n  none: 'Без нотификации',\n  noneSMS: 'Не определено',\n  code: 'Код',\n  description: 'Описание',\n  name: 'Название',\n  value: 'Значение',\n  role: 'Авторизационная Роль',\n  noneRole: 'Без Авторизации',\n  logout: 'Выйти',\n  evseSlow: 'EVSE Медленая зарядка',\n  evseFastCharge: 'EVSE Быстрая зарядка',\n  evseDisableCharge: 'EVSE Отключить зарядку ',\n  noneUPS: 'Нет',\n  ups: 'Источник бесперебойного питания',\n  upsMenu: 'ИБП',\n  upsInfo: 'Информация от UPS',\n  upsMinValue: 'Минимальное значение при котором батарея считается что заряжается',\n  UPS2: 'Автоматическое отключение по таймеру',\n  upsMaxTimeHours: 'Время до выключения устройства',\n  ups1H: '1 Час',\n  ups4H: '4 Часа',\n  ups5H: '5 Часов',\n  ups6H: '6 Часов',\n  ups7H: '7 Часов',\n  ups8H: '8 Часов',\n  ups1D: '1 день',\n  ups2D: '2 дня',\n  gpioMenu: 'GPIO',\n};\n","import Cookies from 'js-cookie';\nimport { RussianLabels } from './RussianLanguage';\n\nconst Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling Mode 10 Mins',\n  cooling20Mins: 'Cooling Mode 20 Mins',\n  cooling30Mins: 'Cooling Mode 30 Mins',\n  windscreen10Mins: 'Windscreen Mode 10 Mins',\n  windscreen20Mins: 'Windscreen Mode 20 Mins',\n  windscreen30Mins: 'Windscreen Mode 30 Mins',\n  heating10Mins: 'Heating Mode 10 Mins',\n  heating20Mins: 'Heating Mode 20 Mins',\n  heating30Mins: 'Heating Mode 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Test Action',\n  testNotification: 'Test Notification',\n  actionTimeout: 'Action Timeout',\n  language: 'Language',\n  modalHelp: 'Where to get ',\n  modalStep1: '1. Open ',\n  modalStep2: '2. Select smartapps in your location ',\n  modalStep3: '3. Select your smartapp ',\n  modalStep4: '4. get parameter ',\n  modelYear: 'Model Year',\n  any: 'Any',\n  phev2019: '2019',\n  battery: 'battery',\n  updateValue: 'Update Value',\n  loading: 'Loading...',\n  batteryFactory: 'Battery Factor',\n  doors: 'Doors Status',\n  forceUpdate: 'Force Update',\n  executeUpdate: 'Force Update during update values',\n  hvac: 'Thermostat Operating State',\n  sendNotification: 'Send Push Notification about Battery Warning',\n  notification: 'Notification',\n  testNotificationLabel: 'Send Push Notification',\n  sms: 'SMS API Service',\n  smsPassword: 'SMS Password',\n  mikrotikSMS: 'Mikrotik LTE',\n  huaweiHiLinkSMS: 'Huawei HiLink',\n  phone: 'Authorized mobile phone from which SMS can be sent',\n  phoneHuawei: 'Authorized mobile phone which should receive SMS',\n  huaweiPassword: 'Huawei Password Login(Optional)',\n  huaweiInstallation: 'Installation script (please run under root)',\n  huaweiRecieveSMS: 'Content of the file /opt/modem/recieveSMS.sh',\n  huaweiSMS: 'Content of the file /opt/modem/sendSMS.sh',\n  mikrotikScript: 'Mikrotik Script',\n  mikrotikScheduler: 'Mikrotik Scheduler',\n  smsCommands: 'List of SMS Commands',\n  smsCar: 'Model Year for SMS',\n  useSmartthings: 'Use Smartthings',\n  smsCodes: 'SMS Error Codes',\n  cron: 'Cron Jobs',\n  sendSMSNotification: 'Send notification over SMS',\n  updateDevices: 'Update Devices Job',\n  syncDevices: 'sync Devices between local and Smartthings Job',\n  cloudDevices: 'execute Devices',\n  theft: 'Theft alarm system activated in ETACS ',\n  Yes: 'Yes',\n  No: 'No',\n  useCloud: 'disabled setting \"Setup my devices without cloud\" in Smartthings SmartApp',\n  both: 'Both',\n  onlySMS: 'SMS',\n  onlyPush: 'PUSH',\n  none: 'None',\n  noneSMS: 'None',\n  code: 'Code',\n  description: 'Description',\n  name: 'Name',\n  value: 'Value',\n  role: 'Authorization Role',\n  noneRole: 'Authorization is disabled',\n  logout: 'Logout',\n  evseSlow: 'EVSE Slow Charge',\n  evseFastCharge: 'EVSE Fast Charge',\n  evseDisableCharge: 'EVSE Disable Charger',\n  noneUPS: 'None',\n  UPS1: 'UPS HAT waveshare',\n  UPS2: 'Automatic shutdown by timer',\n  ups: 'Uninterruptible Power Supply',\n  upsMinValue: 'Power minimum value',\n  upsMenu: 'UPS',\n  installation: 'Installation script',\n  INA219: 'content of /opt/ups/INA219.py',\n  ups_sh: 'content of /opt/ups/ups.sh',\n  upsMaxTimeHours: 'Time until the device is turned off',\n  ups1H: '1 Hour',\n  ups4H: '4 Hour',\n  ups5H: '5 Hour',\n  ups6H: '6 Hour',\n  ups7H: '7 Hour',\n  ups8H: '8 Hour',\n  ups1D: '1 Day',\n  ups2D: '2 Day',\n  gpioMenu: 'GPIO',\n  pullOFF: 'pullOff',\n  pullDown: 'pullDown',\n  pullUp: 'pullUp',\n  risingEdge: 'Rising',\n  fallingEdge: 'Falling',\n  eitherEdge: 'Either',\n  gpioShutdown: 'Shutdown GPIO number',\n  pullUpDownShutdown: 'pull Up or Down',\n  edgeShutdown: 'Edge',\n  levelShutdown: 'Logic Level',\n};\n\nexport function getLabels() {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage === 'Russian') {\n    return { ...Labels, ...RussianLabels };\n  }\n  return Labels;\n}\n\nexport function setLanguage(language) {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage !== language) {\n    if (language === 'Russian' || language === 'English') {\n      Cookies.set('Language', language);\n    }\n  }\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  // eslint-disable-next-line no-console\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Checkbox, Image, InputNumber, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { PoweroffOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Modal from 'antd/es/modal/Modal';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      actionTimeout: 0,\n      language: 'English',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n      executeUpdate: true,\n      sms: true,\n      smsType: 'none',\n      smsPassword: '',\n      sendNotification: true,\n      sendSMSNotification: false,\n      smsCar: 'any',\n      useSmartthings: false,\n      useCloud: false,\n      batteryFactory: 1.0,\n      isModalVisible: false,\n      theft: false,\n      upsMaxTimeHours: 8,\n      upsMinValue: -0.14,\n      role: '',\n      ups: 'none',\n      gpio: false,\n      roles: [],\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        language,\n        actionTimeout,\n        batteryFactory,\n        executeUpdate,\n        sendNotification,\n        smsPassword,\n        sms,\n        smsType,\n        ups,\n        upsMaxTimeHours,\n        upsMinValue,\n        sendSMSNotification,\n        shard,\n        useSmartthings,\n        smsCar,\n        theft,\n        role,\n        gpio,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      if (actionTimeout) {\n        copyConfig.smartthings.timeout = actionTimeout;\n      }\n      if (language) {\n        copyConfig.language = language;\n      }\n      if (batteryFactory) {\n        copyConfig.batteryFactory = batteryFactory;\n      }\n      copyConfig.smartthings.sms.enabled = sms;\n      if (smsType) {\n        copyConfig.smartthings.sms.smsType = smsType;\n      }\n      if (smsPassword) {\n        copyConfig.smartthings.sms.password = smsPassword;\n      }\n      if (smsCar) {\n        copyConfig.smartthings.sms.smsCar = smsCar;\n        copyConfig.smartthings.sms.sendSMSNotification = sendSMSNotification;\n      }\n      if (role) {\n        copyConfig.role = role;\n      }\n      if (ups) {\n        copyConfig.ups = ups;\n        copyConfig.upsMaxTimeHours = upsMaxTimeHours;\n        copyConfig.upsMinValue = upsMinValue;\n      }\n      if (gpio) {\n        copyConfig.gpio.enabled = true;\n      }\n      copyConfig.smartthings.useSmartthings = useSmartthings;\n      copyConfig.theft = theft;\n      copyConfig.smartthings.executeUpdate = executeUpdate;\n      copyConfig.smartthings.sendNotification = sendNotification;\n      try {\n        let res;\n        let status = { status: 'OK' };\n        if (useSmartthings) {\n          res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n          status = JSON.parse(res.data);\n        }\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => {\n            if (text === 'smartthingsAppId'\n                || text === 'smartthingsAppSecret') {\n              return (\n                <div>\n                  <a>{getLabels()[text] || text}</a>\n                  <Button\n                    type=\"text\"\n                    icon={<QuestionCircleOutlined />}\n                    onClick={() => {\n                      this.setState({ isModalVisible: true });\n                    }}\n                  />\n                  <Modal\n                    title={getLabels().modalHelp + getLabels()[text] || text}\n                    visible={this.state.isModalVisible}\n                    onCancel={(\n                    ) => { this.setState({ isModalVisible: false }); }}\n                    footer={[\n                      <Button\n                        key=\"ok\"\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({ isModalVisible: false });\n                        }}\n                      >\n                        Ok\n                      </Button>,\n                    ]}\n                  >\n                    <p>\n                      {getLabels().modalStep1}\n                      <Button\n                        type=\"link\"\n                        onClick={() => {\n                          window.open('https://graph.api.smartthings.com', '_blank');\n                        }}\n                      >\n                        https://graph.api.smartthings.com/\n                      </Button>\n                    </p>\n                    <p>{getLabels().modalStep2}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp1.png\"\n                    />\n                    <p>{getLabels().modalStep3}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp2.png\"\n                    />\n                    <p>{getLabels().modalStep4 + getLabels()[text] || text}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp3.png\"\n                    />\n                  </Modal>\n                </div>\n              );\n            }\n            return <a>{getLabels()[text] || text}</a>;\n          },\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'role') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      role: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.role || 'none'}\n                >\n                  {this.state.roles.map((r) => <Select.Option value={r}>{r}</Select.Option>)}\n                  <Select.Option value=\"none\">{getLabels().noneRole}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'executeUpdate') {\n              return (\n                <Checkbox\n                  checked={this.state.executeUpdate}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.executeUpdate = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'sendNotification') {\n              return (\n                <div>\n                  <Checkbox\n                    checked={this.state.sendNotification}\n                    onChange={(e) => {\n                      const newState = { changed: true };\n                      newState.sendNotification = e.target.checked;\n                      this.setState(newState);\n                    }}\n                  >\n                    {getLabels().testNotificationLabel}\n                  </Checkbox>\n                  <br />\n                  <Button\n                    type=\"primary\"\n                    icon={<PoweroffOutlined />}\n                    loading={this.state.loading}\n                    onClick={async () => {\n                      this.setState({ loading: true });\n                      try {\n                        await sendToBackend('/ui/settings/testNotification', 'POST', { message: 'Test Message' });\n                      } finally {\n                        this.setState({ loading: false });\n                      }\n                    }}\n                  >\n                    {getLabels().testNotification}\n                  </Button>\n                </div>\n              );\n            }\n            if (data.name === 'actionTimeout') {\n              return (\n                <InputNumber\n                  style={{\n                    width: 200,\n                  }}\n                  defaultValue={this.state.actionTimeout}\n                  min=\"0\"\n                  max=\"300000\"\n                  step=\"1000\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue) {\n                            const newState = { changed: true };\n                            newState.actionTimeout = newValue;\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                  stringMode\n                />\n              );\n            }\n            if (data.name === 'batteryFactory') {\n              return (\n                <InputNumber\n                  style={{\n                    width: 200,\n                  }}\n                  defaultValue={this.state.batteryFactory}\n                  min=\"0\"\n                  max=\"10\"\n                  step=\"0.0001\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue) {\n                            const newState = { changed: true };\n                            newState.batteryFactory = newValue;\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                  stringMode\n                />\n              );\n            }\n            if (data.name === 'smsCar') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      smsCar: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.smsCar || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'smsType') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      smsType: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.smsType || 'none'}\n                >\n                  <Select.Option value=\"none\">{getLabels().noneSMS}</Select.Option>\n                  <Select.Option value=\"mikrotik\">{getLabels().mikrotikSMS}</Select.Option>\n                  <Select.Option value=\"huaweiHiLink\">{getLabels().huaweiHiLinkSMS}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'sms') {\n              return (\n                <Checkbox\n                  checked={this.state.sms}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.sms = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'theft') {\n              return (\n                <Checkbox\n                  checked={this.state.theft}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.theft = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'sendSMSNotification') {\n              return (\n                <Checkbox\n                  checked={this.state.sendSMSNotification}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.sendSMSNotification = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'useSmartthings') {\n              return (\n                <Checkbox\n                  checked={this.state.useSmartthings}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.useSmartthings = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'useCloud') {\n              return this.state.useCloud ? getLabels().Yes : getLabels().No;\n            }\n            if (data.name === 'language') {\n              return (\n                <Select\n                  defaultValue={this.state.language}\n                  style={{ width: 200 }}\n                  onChange={(lang) => {\n                    this.setState({ language: lang, changed: true });\n                  }}\n                >\n                  <Select.Option value=\"English\">English</Select.Option>\n                  <Select.Option value=\"Russian\">Russian</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'ups') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      ups: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.ups || 'none'}\n                >\n                  <Select.Option value=\"none\">{getLabels().noneUPS}</Select.Option>\n                  <Select.Option value=\"ups2\">{getLabels().UPS2}</Select.Option>\n                  <Select.Option value=\"ups1\">{getLabels().UPS1}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'upsMaxTimeHours') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      upsMaxTimeHours: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.upsMaxTimeHours || '8'}\n                >\n                  <Select.Option value=\"1\">{getLabels().ups1H}</Select.Option>\n                  <Select.Option value=\"4\">{getLabels().ups4H}</Select.Option>\n                  <Select.Option value=\"5\">{getLabels().ups5H}</Select.Option>\n                  <Select.Option value=\"6\">{getLabels().ups6H}</Select.Option>\n                  <Select.Option value=\"7\">{getLabels().ups7H}</Select.Option>\n                  <Select.Option value=\"8\">{getLabels().ups8H}</Select.Option>\n                  <Select.Option value=\"24\">{getLabels().ups1D}</Select.Option>\n                  <Select.Option value=\"48\">{getLabels().ups2D}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'upsMinValue') {\n              return (\n                <InputNumber\n                  style={{\n                    width: 200,\n                  }}\n                  defaultValue={this.state.upsMinValue}\n                  min=\"-1\"\n                  max=\"0\"\n                  step=\"0.01\"\n                  onChange={\n                              (newValue) => {\n                                if (newValue) {\n                                  const newState = { changed: true };\n                                  newState.upsMinValue = newValue;\n                                  this.setState(newState);\n                                }\n                              }\n                          }\n                  stringMode\n                />\n              );\n            }\n            if (data.name === 'gpio') {\n              return (\n                <Checkbox\n                  checked={this.state.gpio}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.gpio = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      let roles = [];\n      if (settings.data.connectionType === 'keycloak') {\n        const res = await fetchBackend('/ui/keycloak/roles');\n        roles = JSON.parse(res.data);\n      }\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n        actionTimeout: settings.data.smartthings.timeout,\n        batteryFactory: settings.data.batteryFactory || 1.0,\n        language: settings.data.language || 'English',\n        theft: settings.data.theft,\n        executeUpdate: settings.data.smartthings.executeUpdate,\n        sendNotification: settings.data.smartthings.sendNotification,\n        sms: settings.data.smartthings.sms.enabled,\n        smsType: settings.data.smartthings.sms.smsType,\n        smsCar: settings.data.smartthings.sms.smsCar || 'any',\n        smsPassword: settings.data.smartthings.sms.password,\n        useSmartthings: settings.data.smartthings.useSmartthings,\n        useCloud: settings.data.smartthings.useCloud,\n        role: settings.data.role,\n        ups: settings.data.ups,\n        upsMaxTimeHours: settings.data.upsMaxTimeHours,\n        upsMinValue: settings.data.upsMinValue,\n        roles,\n        sendSMSNotification: !!settings.data.smartthings.sms.sendSMSNotification,\n        gpio: !!settings.data.gpio.enabled,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, useSmartthings, loading, error, sms, role,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [{\n          name: 'macAddress',\n          value: settings.data.macAddress,\n        }, {\n          name: 'theft',\n          value: settings.data.theft,\n        },\n        {\n          name: 'useSmartthings',\n          value: settings.data.smartthings.useSmartthings,\n        },\n        {\n          name: 'useCloud',\n          value: settings.data.smartthings.useCloud,\n        }];\n        if (useSmartthings) {\n          data.push({\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'sendNotification',\n            value: settings.data.smartthings.sendNotification,\n          });\n        }\n\n        data.push(\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n        );\n        if (settings.data.connectionType === 'keycloak') {\n          data.push(\n            {\n              name: 'role',\n              value: role,\n            },\n          );\n        }\n        data.push({\n          name: 'actionTimeout',\n          value: settings.data.smartthings.timeout,\n        },\n        {\n          name: 'executeUpdate',\n          value: settings.data.smartthings.executeUpdate,\n        },\n        {\n          name: 'language',\n          value: settings.data.language,\n        },\n        {\n          name: 'batteryFactory',\n          value: settings.data.batteryFactory || 1.0,\n        },\n        {\n          name: 'sms',\n          value: settings.data.smartthings.sms.enabled,\n        });\n        if (sms) {\n          data.push({\n            name: 'smsType',\n            value: settings.data.smartthings.sms.smsType || 'none',\n          });\n          data.push({\n            name: 'smsPassword',\n            value: settings.data.smartthings.sms.password,\n          });\n          data.push({\n            name: 'smsCar',\n            value: settings.data.smartthings.sms.smsCar,\n          });\n          data.push({\n            name: 'sendSMSNotification',\n            value: settings.data.smartthings.sms.sendSMSNotification,\n          });\n        }\n        data.push({\n          name: 'gpio',\n          value: settings.data.gpio.enabled,\n        });\n        data.push({\n          name: 'ups',\n          value: settings.data.ups,\n        });\n        if (settings.data.ups && settings.data.ups !== 'none') {\n          data.push({\n            name: 'upsMaxTimeHours',\n            value: settings.data.upsMaxTimeHours,\n          });\n          if (settings.data.ups === 'ups1') {\n            data.push({\n              name: 'upsMinValue',\n              value: settings.data.upsMinValue,\n            });\n          }\n        }\n\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n  SMS: 'SMS',\n  CRON: 'CRON',\n  NOTIFICATION: 'NOTIFICATION',\n  UPS: 'UPS',\n  GPIO: 'GPIO',\n};\n","import * as React from 'react';\nimport {\n  Button, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      modelYear: 'any',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"doors\">{getLabels().doors}</Select.Option>\n                  <Select.Option value=\"hvac\">{getLabels().hvac}</Select.Option>\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                  <Select.Option value=\"forceUpdate\">{getLabels().forceUpdate}</Select.Option>\n                  <Select.Option value=\"evseSlow\">{getLabels().evseSlow}</Select.Option>\n                  <Select.Option value=\"evseFastCharge\">{getLabels().evseFastCharge}</Select.Option>\n                  <Select.Option value=\"evseDisableCharge\">{getLabels().evseDisableCharge}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n      updatable: false,\n      modelYear: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id: deviceId, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onTestClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/testDevice', 'POST', { id: deviceId });\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => (\n            <a>\n              {\n            (text === 'testDevice' && this.state.updatable) ? getLabels().updateValue : getLabels()[text] || text\n              }\n            </a>\n          ),\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  disabled={this.state.updatable}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"doors\">{getLabels().doors}</Select.Option>\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"hvac\">{getLabels().hvac}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                  <Select.Option value=\"forceUpdate\">{getLabels().forceUpdate}</Select.Option>\n                  <Select.Option value=\"evseSlow\">{getLabels().evseSlow}</Select.Option>\n                  <Select.Option value=\"evseFastCharge\">{getLabels().evseFastCharge}</Select.Option>\n                  <Select.Option value=\"evseDisableCharge\">{getLabels().evseDisableCharge}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'deviceId' || data.name === 'deviceLabel') {\n              return value;\n            }\n            if (data.name === 'testDevice') {\n              return (\n                <Button\n                  type=\"primary\"\n                  icon={<PoweroffOutlined />}\n                  loading={this.state.loading}\n                  onClick={() => this.onTestClick()}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        modelYear: device.modelYear,\n        updatable: device.updatable,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n        {\n          name: 'testDevice',\n          value: '',\n        },\n      ];\n\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend } from '../utils/restCalls';\n\nexport class SmartthingsSMS extends React.Component {\n    state = {\n      loadingPage: true,\n      // eslint-disable-next-line react/no-unused-state\n      settings: null,\n      mikrotikSMS: null,\n      huaweiInstallation: null,\n      huaweiRecieveSMS: null,\n      huaweiSMS: null,\n      smsCommands: null,\n      smsCodes: null,\n      phone: '',\n      huaweiPassword: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            if (data.name === 'phone') {\n              return (\n                <MaskedInput\n                  mask=\"+############\"\n                  name={getLabels().phone}\n                  value={this.state.phone}\n                  placeholder=\"+xxxxxxxxxxxx\"\n                  onChange={\n                          (newValue) => {\n                            if (newValue.target.value && !newValue.target.value.includes('_')) {\n                              const newState = { phone: newValue.target.value };\n                              this.setState(newState);\n                            }\n                          }\n                      }\n                />\n              );\n            }\n            if (data.name === 'phoneHuawei') {\n              return (\n                <MaskedInput\n                  mask=\"+############\"\n                  name={getLabels().phoneHuawei}\n                  value={this.state.phone}\n                  placeholder=\"+xxxxxxxxxxxx\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue.target.value && !newValue.target.value.includes('_')) {\n                            const newState = { phone: newValue.target.value };\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                />\n              );\n            }\n            if (data.name === 'applicationHost') {\n              return this.currentHost();\n            }\n            if (data.name === 'applicationId') {\n              return this.state.settings.data.smartthings.sms.appId;\n            }\n            if (data.name === 'applicationSecret') {\n              return this.state.settings.data.smartthings.sms.secret;\n            }\n            if (data.name === 'smsCodes') {\n              return (\n                <Table\n                  pagination={false}\n                  columns={[\n                    {\n                      title: getLabels().code,\n                      dataIndex: 'name',\n                      key: 'name',\n                    }, {\n                      title: getLabels().description,\n                      dataIndex: 'value',\n                      key: 'value',\n                    }]}\n                  dataSource={\n                         Object.keys(this.state.smsCodes).map((code) => ({\n                           name: code,\n                           value: this.state.smsCodes[code],\n                         }))\n                       }\n                />\n              );\n            }\n            if (data.name === 'smsCommands') {\n              return (\n                <Table\n                  pagination={false}\n                  columns={[{\n                    title: 'Commands',\n                    dataIndex: 'name',\n                    key: 'name',\n                  }]}\n                  dataSource={\n                  this.state.smsCommands.map((command) => ({\n                    name: command,\n                  }))\n                }\n                />\n              );\n            }\n            if (data.name === 'mikrotikScript') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.mikrotikSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiInstallation') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiInstallation\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiRecieveSMS') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiRecieveSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiSMS') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = {};\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {text}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    currentHost() {\n      return `${window.location.protocol}//${window.location.hostname}:${this.state.settings.data.portSMS}`;\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      let settings = null;\n      let mikrotikSMS = null;\n      let huaweiInstallation = null;\n      let huaweiRecieveSMS = null;\n      let huaweiSMS = null;\n      let smsCommands = null;\n      let smsCodes = null;\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        settings = JSON.parse(data);\n        const resp = await fetchBackend('/mikrotikSMS.script');\n        const respHuaweiInst = await fetchBackend('/installation.script');\n        const respHuaweiRecieve = await fetchBackend('/huaweiRecieveSMS.script');\n        const respHuaweiSMS = await fetchBackend('/huaweiSMS.script');\n        const respHelp = await fetchBackend('/ui/sms/help');\n        const respCodes = await fetchBackend('/ui/sms/codes');\n        mikrotikSMS = resp.data;\n        huaweiInstallation = respHuaweiInst.data;\n        huaweiRecieveSMS = respHuaweiRecieve.data;\n        huaweiSMS = respHuaweiSMS.data;\n        smsCommands = JSON.parse(respHelp.data);\n        smsCodes = JSON.parse(respCodes.data);\n      } finally {\n        this.setState({\n          // eslint-disable-next-line react/no-unused-state\n          settings,\n          mikrotikSMS,\n          huaweiInstallation,\n          huaweiRecieveSMS,\n          huaweiSMS,\n          smsCommands,\n          smsCodes,\n          loadingPage: false,\n        });\n      }\n    }\n\n    render() {\n      const {\n        loadingPage,\n        phone,\n        huaweiPassword,\n        settings,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'applicationHost',\n          value: 'applicationHost',\n        },\n        {\n          name: 'applicationId',\n          value: 'applicationId',\n        },\n        {\n          name: 'applicationSecret',\n          value: 'applicationSecret',\n        },\n      ];\n      if (!loadingPage) {\n        if (settings.data.smartthings.sms.smsType === 'mikrotik') {\n          data.unshift({\n            name: 'phone',\n            value: phone,\n          });\n          if (phone) {\n            data.push({\n              name: 'mikrotikScript',\n              value: 'mikrotikScript',\n            });\n          }\n        }\n        if (settings.data.smartthings.sms.smsType === 'huaweiHiLink') {\n          data.unshift({\n            name: 'phoneHuawei',\n            value: phone,\n          });\n          if (phone) {\n            data.splice(1, 0, {\n              name: 'huaweiPassword',\n              value: huaweiPassword,\n            });\n            data.push({\n              name: 'huaweiInstallation',\n              value: 'huaweiInstallation',\n            });\n            data.push({\n              name: 'huaweiRecieveSMS',\n              value: 'huaweiRecieveSMS',\n            });\n            data.push({\n              name: 'huaweiSMS',\n              value: 'huaweiSMS',\n            });\n          }\n        }\n      }\n      data.push({\n        name: 'smsCommands',\n        value: 'smsCommands',\n      });\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class CronSettings extends React.Component {\n    state = {\n      settings: {},\n      changed: false,\n      error: '',\n      updateDevices: '',\n      syncDevices: '',\n      cloudDevices: '',\n      shutdown: '',\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        settings,\n        updateDevices,\n        syncDevices,\n        cloudDevices,\n        shutdown,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (updateDevices) {\n        copyConfig.cron.updateDevices = updateDevices;\n      }\n      if (syncDevices) {\n        copyConfig.cron.syncDevices = syncDevices;\n      }\n      if (cloudDevices) {\n        copyConfig.cron.cloudDevices = cloudDevices;\n      }\n      if (shutdown) {\n        copyConfig.cron.shutdown = shutdown;\n      }\n      try {\n        const res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n        const status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          const event = { changed: false };\n          await this.props.reload();\n          await this.reload();\n          this.setState(event);\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        updateDevices: settings.data.cron.updateDevices,\n        syncDevices: settings.data.cron.syncDevices,\n        cloudDevices: settings.data.cron.cloudDevices,\n        shutdown: settings.data.cron.shutdown,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [{\n          name: 'updateDevices',\n          value: settings.data.cron.updateDevices,\n        },\n        {\n          name: 'syncDevices',\n          value: settings.data.cron.syncDevices,\n        }];\n        if (!settings.data.smartthings.useCloud) {\n          data.push({\n            name: 'cloudDevices',\n            value: settings.data.cron.syncDevices,\n          });\n        }\n        if (settings.data.ups && settings.data.ups !== 'none') {\n          data.push({\n            name: 'shutdown',\n            value: settings.data.cron.shutdown,\n          });\n        }\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Select, Table,\n} from 'antd';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class NotificationSettings extends React.Component {\n    state = {\n      settings: {},\n      changed: false,\n      error: '',\n      smsCodes: null,\n      notifications: null,\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        settings,\n        notifications,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      copyConfig.notifications = notifications;\n      try {\n        const res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n        const status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          const event = { changed: false };\n          await this.props.reload();\n          await this.reload();\n          this.setState(event);\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().code,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{text}</a>,\n        },\n        {\n          title: getLabels().description,\n          dataIndex: 'description',\n          key: 'description',\n          render: (text) => <a>{text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'description',\n          key: 'description',\n          render: (text, data) => (\n            <Select\n              style={{ width: 200 }}\n              defaultValue={this.state.notifications[data.name]}\n              onChange={(event) => {\n                if (event) {\n                  const newState = { changed: true };\n                  this.state.notifications[data.name] = event;\n                  newState.notifications = this.state.notifications;\n                  this.setState(newState);\n                }\n              }}\n            >\n              <Select.Option disabled={!this.state.settings.data.smartthings.sendNotification && !this.state.settings.data.smartthings.sms.enabled && !this.state.settings.data.smartthings.sms.sendSMSNotification} value=\"both\">{getLabels().both}</Select.Option>\n              <Select.Option disabled={!this.state.settings.data.smartthings.sms.enabled && !this.state.settings.data.smartthings.sms.sendSMSNotification} value=\"sms\">{getLabels().onlySMS}</Select.Option>\n              <Select.Option disabled={!this.state.settings.data.smartthings.sendNotification} value=\"push\">{getLabels().onlyPush}</Select.Option>\n              <Select.Option value=\"none\">{getLabels().none}</Select.Option>\n\n            </Select>\n          ),\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const respCodes = await fetchBackend('/ui/sms/codes');\n      const smsCodes = JSON.parse(respCodes.data);\n      this.setState({\n        settings,\n        smsCodes,\n        notifications: settings.data.notifications,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error, smsCodes, notifications,\n      } = this.state;\n      if (settings.status === 'OK' && smsCodes != null) {\n        const data = [];\n        Object.keys(notifications).forEach((nk) => {\n          data.push({\n            name: nk,\n            status: notifications[nk],\n            description: smsCodes[nk] || getLabels()[nk],\n          });\n        });\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","import * as React from 'react';\nimport { Card, Table } from 'antd';\nimport moment from 'moment';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport TextArea from 'antd/es/input/TextArea';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend } from '../utils/restCalls';\n\nexport class SmartthingsUPS extends React.Component {\n    state = {\n      loadingPage: true,\n      // eslint-disable-next-line react/no-unused-state\n      settings: null,\n      installation: null,\n      installation2: null,\n      INA219: null,\n      ups_sh: null,\n      upsInfo: {\n        loadVoltage: undefined,\n        current: undefined,\n        power: undefined,\n        percent: undefined,\n        timeToShutDown: undefined,\n      },\n    };\n\n    async componentDidMount() {\n      await this.reload();\n      const comp = this;\n      setInterval(() => { comp.loadData(comp); }, 10000);\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            if (data.name === 'installation') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 5, maxRows: 100 }}\n                  value={\n                    this.state.settings.data.ups === 'ups1'\n                      ? this.state.installation\n                      : this.state.installation2\n                }\n                />\n              );\n            }\n            if (data.name === 'INA219') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 10, maxRows: 20 }}\n                  value={\n                  this.state.INA219\n                }\n                />\n              );\n            }\n            if (data.name === 'ups_sh') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 4, maxRows: 5 }}\n                  value={\n                  this.state.ups_sh\n                }\n                />\n              );\n            }\n            if (data.name === 'upsInfo') {\n              return (\n                <div>\n                  <Card title=\"Battery Info\" style={{ width: 300 }}>\n                    { this.state.settings.data.ups === 'ups1'\n                      ? (\n                        <div>\n                          <p>{`Load Voltage: ${this.state.upsInfo.loadVoltage}`}</p>\n                          <p>{`Current: ${this.state.upsInfo.current}`}</p>\n                          <p>{`Percent: ${this.state.upsInfo.percent}`}</p>\n                          <p>{`Power: ${this.state.upsInfo.power}`}</p>\n                        </div>\n                      )\n                      : ''}\n                    <p>{`Time to Shutdown: ${this.msToTime(this.state.upsInfo.timeToShutDown)}`}</p>\n                  </Card>\n                </div>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = {};\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {text}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    msToTime(duration) {\n      const tempTime = moment.duration(duration);\n      return `${tempTime.months() > 0 ? `${tempTime.months()} months:` : ''}${tempTime.days() > 0 ? `${tempTime.days()} days:` : ''}${tempTime.hours() > 0 ? `${tempTime.hours() % 24} hours:` : ''}${tempTime.minutes() > 0 ? `${tempTime.minutes()} mins:` : ''}${tempTime.seconds() > 0 ? `${tempTime.seconds()} secs` : ''}`;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async loadData(comp) {\n      try {\n        const upsInfoResp = await fetchBackend('/ui/ups/info');\n        comp.setState({\n          upsInfo: JSON.parse(upsInfoResp.data),\n        });\n      } catch (e) {\n      // eslint-disable-next-line no-console\n        console.log(e);\n      }\n    }\n\n    currentHost() {\n      return `${window.location.protocol}//${window.location.hostname}:${this.state.settings.data.portSMS}`;\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      let settings = null;\n      let installation = null;\n      let installation2 = null;\n      let INA219 = null;\n      let upsSH = null;\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        settings = JSON.parse(data);\n        const respInst = await fetchBackend('/ups/installation.script');\n        installation = respInst.data;\n        const respInst2 = await fetchBackend('/ups/installation2.script');\n        installation2 = respInst2.data;\n        const respINA219 = await fetchBackend('/ups/INA219.py');\n        INA219 = respINA219.data;\n        const upsSHResp = await fetchBackend('/ups/ups.sh');\n        upsSH = upsSHResp.data;\n        await this.loadData(this);\n      } finally {\n        this.setState({\n          // eslint-disable-next-line react/no-unused-state\n          settings,\n          installation,\n          installation2,\n          INA219,\n          ups_sh: upsSH,\n          loadingPage: false,\n        });\n      }\n    }\n\n    render() {\n      const {\n        loadingPage, upsInfo, settings,\n      } = this.state;\n\n      const data = [\n      ];\n      if (!loadingPage) {\n        data.push({\n          name: 'upsInfo',\n          value: upsInfo,\n        });\n\n        if (settings.data.ups === 'ups2') {\n          data.push({\n            name: 'installation',\n            value: 'installation2',\n          });\n        }\n        if (settings.data.ups === 'ups1') {\n          data.push({\n            name: 'INA219',\n            value: 'INA219',\n          });\n          data.push({\n            name: 'ups_sh',\n            value: 'ups_sh',\n          });\n          data.push({\n            name: 'installation',\n            value: 'installation',\n          });\n        }\n      }\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Select, Table,\n} from 'antd';\nimport moment from 'moment';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsGPIO extends React.Component {\n    state = {\n      loadingPage: true,\n      // eslint-disable-next-line react/no-unused-state\n      settings: null,\n      changed: false,\n      gpioShutdown: 26,\n      pullUpDownShutdown: 0,\n      edgeShutdown: 2,\n      error: '',\n      levelShutdown: 1,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        settings,\n        gpioShutdown,\n        pullUpDownShutdown,\n        edgeShutdown,\n        levelShutdown,\n      } = this.state;\n      this.setState({ loadingPage: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      copyConfig.gpio.shutdown = {\n        gpio: gpioShutdown,\n        pullUpDown: pullUpDownShutdown,\n        edge: edgeShutdown,\n        level: levelShutdown,\n      };\n      try {\n        const res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n        const status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          const event = { changed: false };\n          await this.props.reload();\n          await this.reload();\n          this.setState(event);\n        } else {\n          this.setState({ error: `Error: ${status.message}` });\n        }\n      } catch (e) {\n        this.setState({ error: `Error: ${e.message}` });\n      } finally {\n        this.setState({ loadingPage: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            if (data.name === 'pullUpDownShutdown') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      pullUpDownShutdown: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.pullUpDownShutdown || '0'}\n                >\n                  <Select.Option value=\"0\">{getLabels().pullOFF}</Select.Option>\n                  <Select.Option value=\"1\">{getLabels().pullDown}</Select.Option>\n                  <Select.Option value=\"2\">{getLabels().pullUp}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'levelShutdown') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      levelShutdown: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.levelShutdown || '1'}\n                >\n                  <Select.Option value=\"0\">0</Select.Option>\n                  <Select.Option value=\"1\">1</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'edgeShutdown') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      edgeShutdown: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.edgeShutdown || '0'}\n                >\n                  <Select.Option value=\"0\">{getLabels().risingEdge}</Select.Option>\n                  <Select.Option value=\"1\">{getLabels().fallingEdge}</Select.Option>\n                  <Select.Option value=\"2\">{getLabels().eitherEdge}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = {};\n                    newState[data.name] = newValue;\n                    newState.changed = true;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {text}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    msToTime(duration) {\n      const tempTime = moment.duration(duration);\n      return `${tempTime.months() > 0 ? `${tempTime.months()} months:` : ''}${tempTime.days() > 0 ? `${tempTime.days()} days:` : ''}${tempTime.hours() > 0 ? `${tempTime.hours() % 24} hours:` : ''}${tempTime.minutes() > 0 ? `${tempTime.minutes()} mins:` : ''}${tempTime.seconds() > 0 ? `${tempTime.seconds()} secs` : ''}`;\n    }\n\n    currentHost() {\n      return `${window.location.protocol}//${window.location.hostname}:${this.state.settings.data.portSMS}`;\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      let settings = null;\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        settings = JSON.parse(data);\n      } finally {\n        this.setState({\n          // eslint-disable-next-line react/no-unused-state\n          settings,\n          gpioShutdown: settings.data.gpio.shutdown.gpio,\n          pullUpDownShutdown: settings.data.gpio.shutdown.pullUpDown,\n          edgeShutdown: settings.data.gpio.shutdown.edge,\n          levelShutdown: settings.data.gpio.shutdown.level,\n          loadingPage: false,\n        });\n      }\n    }\n\n    render() {\n      const {\n        loadingPage, gpioShutdown, pullUpDownShutdown, edgeShutdown, levelShutdown, changed, error,\n      } = this.state;\n\n      const data = [\n      ];\n      if (!loadingPage) {\n        data.push({\n          name: 'gpioShutdown',\n          value: gpioShutdown,\n        });\n        data.push({\n          name: 'pullUpDownShutdown',\n          value: pullUpDownShutdown,\n        });\n        data.push({\n          name: 'edgeShutdown',\n          value: edgeShutdown,\n        });\n        data.push({\n          name: 'levelShutdown',\n          value: levelShutdown,\n        });\n      }\n\n      return loadingPage ? <spin /> : (\n        <div>\n          {error ? (\n            <Alert\n              message={error}\n              showIcon\n              type=\"error\"\n              closable\n            />\n          ) : null}\n          <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            block\n            disabled={!changed}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\nimport { SmartthingsSMS } from './SmartthingsSMS';\nimport { CronSettings } from './CronSettings';\nimport { NotificationSettings } from './NotificationSettings';\nimport { SmartthingsUPS } from './SmartthingsUPS';\nimport { SmartthingsGPIO } from './SmartthingsGPIO';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    } if (contentPage === CONTENTS.SMS) {\n      return <SmartthingsSMS />;\n    } if (contentPage === CONTENTS.UPS) {\n      return <SmartthingsUPS />;\n    } if (contentPage === CONTENTS.GPIO) {\n      return <SmartthingsGPIO />;\n    } if (contentPage === CONTENTS.CRON) {\n      return <CronSettings />;\n    } if (contentPage === CONTENTS.NOTIFICATION) {\n      return <NotificationSettings />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu, Spin } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport {\n  AppstoreAddOutlined, DesktopOutlined,\n  LogoutOutlined, MessageOutlined,\n  NotificationOutlined, ScheduleOutlined, UserOutlined,\n} from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Title from 'antd/es/typography/Title';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      this.setState({ loading: true });\n      const newState = {};\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        let settings = JSON.parse(data);\n        if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n          await fetchBackend('/ui/settings/syncDevices');\n        }\n        const res = await fetchBackend('/ui/settings');\n        settings = JSON.parse(res.data);\n        newState.settings = settings;\n        if (selectorPage) {\n          newState.selectorPage = selectorPage;\n        }\n        if (id) {\n          newState.componentId = id;\n        }\n      } finally {\n        newState.loading = false;\n        this.setState(newState);\n      }\n    }\n\n    onCollapse = (collapsed) => {\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSMSClick = () => {\n      this.setState({ selectorPage: CONTENTS.SMS });\n    };\n\n    onUPSClick = () => {\n      this.setState({ selectorPage: CONTENTS.UPS });\n    };\n\n    onGPIOClick = () => {\n      this.setState({ selectorPage: CONTENTS.GPIO });\n    };\n\n    onNotificationClick = () => {\n      this.setState({ selectorPage: CONTENTS.NOTIFICATION });\n    };\n\n    onCRONClick = () => {\n      this.setState({ selectorPage: CONTENTS.CRON });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings, loading,\n      } = this.state;\n      return loading ? (\n        <div>\n          <Spin size=\"large\" />\n          <Title>{getLabels().loading}</Title>\n        </div>\n      ) : (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.useSmartthings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n              {\n                    settings && settings.data.smartthings.sms.enabled\n                      ? (\n                        <Menu.Item\n                          key=\"subSMS\"\n                          icon={<MessageOutlined />}\n                          onClick={this.onSMSClick}\n                        >\n                          {getLabels().sms}\n                        </Menu.Item>\n                      ) : null\n                }\n              <Menu.Item\n                key=\"subGPIO\"\n                icon={<MessageOutlined />}\n                onClick={this.onGPIOClick}\n              >\n                {getLabels().gpioMenu}\n              </Menu.Item>\n              {\n\n                    settings && settings.data.ups && settings.data.ups !== 'none'\n                      ? (\n                        <Menu.Item\n                          key=\"subUPS\"\n                          icon={<MessageOutlined />}\n                          onClick={this.onUPSClick}\n                        >\n                          {getLabels().upsMenu}\n                        </Menu.Item>\n                      ) : null\n                }\n              {\n                    settings && (settings.data.smartthings.sms.sendSMSNotification\n                        || settings.data.smartthings.sendNotification)\n                      ? (\n                        <Menu.Item\n                          key=\"subNotification\"\n                          icon={<NotificationOutlined />}\n                          onClick={this.onNotificationClick}\n                        >\n                          {getLabels().notification}\n                        </Menu.Item>\n                      ) : null\n                }\n              <Menu.Item\n                key=\"subCron\"\n                icon={<ScheduleOutlined />}\n                onClick={this.onCRONClick}\n              >\n                {getLabels().cron}\n              </Menu.Item>\n              {\n                  settings && settings.data.connectionType === 'keycloak'\n                    ? (\n                      <Menu.Item\n                        key=\"subLogout\"\n                        icon={<LogoutOutlined />}\n                        onClick={() => {\n                          window.location.href = '/logout';\n                        }}\n                      >\n                        {getLabels().logout}\n                      </Menu.Item>\n                    ) : null\n                }\n\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}