{"version":3,"sources":["utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["Labels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","getLabels","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","loading","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","res","status","event","message","props","title","dataIndex","key","render","text","value","name","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","Paragraph","editable","authenticationType","connectionType","showIcon","type","closable","columns","getColumns","dataSource","block","disabled","onClick","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","style","width","onActionChange","Option","SmartthingsViewDevice","loadingPage","deviceId","prevProps","defaultValue","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","push","ViewUser","userId","user","u","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","log","onSmartThingsSettingClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","icon","DesktopOutlined","AppstoreAddOutlined","map","UserOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2578f553.chunk.js","sourcesContent":["const Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling 10 Mins',\n  cooling20Mins: 'Cooling 20 Mins',\n  cooling30Mins: 'Cooling 30 Mins',\n  windscreen10Mins: 'Windscreen 10 Mins',\n  windscreen20Mins: 'Windscreen 20 Mins',\n  windscreen30Mins: 'Windscreen 30 Mins',\n  heating10Mins: 'Heating 10 Mins',\n  heating20Mins: 'Heating 20 Mins',\n  heating30Mins: 'Heating 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n};\n\nexport function getLabels() {\n  return Labels;\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport { Alert, Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        shard,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      try {\n        let res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n        let status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'shard') {\n              return value;\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [\n          {\n            name: 'macAddress',\n            value: settings.data.macAddress,\n          },\n          {\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n        ];\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={() => {\n                this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n};\n","import * as React from 'react';\nimport { Button, Select, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id: deviceId, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            } if (data.name === 'deviceId') {\n              return value;\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport { AppstoreAddOutlined, DesktopOutlined, UserOutlined } from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      const { data } = await fetchBackend('/ui/settings');\n      let settings = JSON.parse(data);\n      if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n        await fetchBackend('/ui/settings/syncDevices');\n      }\n      const res = await fetchBackend('/ui/settings');\n      settings = JSON.parse(res.data);\n      const newState = { settings };\n      if (selectorPage) {\n        newState.selectorPage = selectorPage;\n      }\n      if (id) {\n        newState.componentId = id;\n      }\n      this.setState(newState);\n    }\n\n    onCollapse = (collapsed) => {\n      console.log(collapsed);\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings,\n      } = this.state;\n      return (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}