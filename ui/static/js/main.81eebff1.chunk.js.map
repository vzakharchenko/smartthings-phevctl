{"version":3,"sources":["utils/RussianLanguage.js","utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["RussianLabels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","testDevice","actionTimeout","language","modalHelp","modalStep1","modalStep2","modalStep3","modalStep4","modelYear","any","phev2019","battery","updateValue","loading","batteryFactor","Labels","getLabels","Cookies","get","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","batteryFactory","isModalVisible","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","res","status","event","message","props","title","dataIndex","key","render","text","type","icon","QuestionCircleOutlined","onClick","Modal","visible","onCancel","footer","window","open","width","src","value","name","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","defaultValue","style","lang","Option","Paragraph","editable","set","authenticationType","connectionType","showIcon","closable","columns","getColumns","dataSource","block","disabled","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","onActionChange","onActionYearSelectChange","push","SmartthingsViewDevice","loadingPage","deviceId","updatable","prevProps","PoweroffOutlined","onTestClick","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","ViewUser","userId","user","u","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","onSmartThingsSettingClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","size","Title","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","DesktopOutlined","AppstoreAddOutlined","map","UserOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81eebff1.chunk.js","sourcesContent":["export const RussianLabels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Сохранить',\n  settings: 'Настройки',\n  devices: 'Устройства',\n  addDevice: 'Добавить Устройство',\n  users: 'Пользователи',\n  addUser: 'Добавить Пользователя',\n  actionId: 'Действие',\n  deviceLabel: 'Название устройства',\n  cooling10Mins: 'Режим Охлаждения на 10 Мин.',\n  cooling20Mins: 'Режим Охлаждения на 20 Мин.',\n  cooling30Mins: 'Режим Охлаждения на 30 Мин.',\n  windscreen10Mins: 'Обогрев лобового окна на 10 мин.',\n  windscreen20Mins: 'Обогрев лобового окна на 20 мин.',\n  windscreen30Mins: 'Обогрев лобового окна на 30 мин.',\n  heating10Mins: 'Режим Отопителя на 10 мин.',\n  heating20Mins: 'Режим Отопителя на 20 мин.',\n  heating30Mins: 'Режим Отопителя на 30 мин.',\n  airconOn: 'Включить Климат контроль',\n  airconOff: 'Отключить Климат Контроль',\n  headlightsOn: 'Включить Фары',\n  headlightsOff: 'Выключить Фары',\n  parkinglightsOn: 'Включить Парковочные огни',\n  parkinglightsOff: 'Выключить Парковочные огни',\n  username: 'Имя пользователя',\n  password: 'Пароль',\n  delete: 'Удалить',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'MAC адрес',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Протестировать устройство',\n  actionTimeout: 'Максимальное время выполнения ',\n  language: 'Язык',\n  modalHelp: 'Где взять параметр ',\n  modalStep1: '1. Откройте портал ',\n  modalStep2: '2. Выбрать smartapps в вашей локации ',\n  modalStep3: '3. Выберите созданное вами \"remote-ctrl-gsm\" ',\n  modalStep4: '4. Возмите со страницы параметр ',\n  modelYear: 'Год Выпуска PHEV',\n  any: 'Любой',\n  phev2019: '2019',\n  battery: 'Заряд Батареи',\n  updateValue: 'Обновить Текущее Значение',\n  loading: 'Подождите идет загрузка...',\n  batteryFactor: 'Множитель батареи',\n};\n","import Cookies from 'js-cookie';\nimport { RussianLabels } from './RussianLanguage';\n\nconst Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling Mode 10 Mins',\n  cooling20Mins: 'Cooling Mode 20 Mins',\n  cooling30Mins: 'Cooling Mode 30 Mins',\n  windscreen10Mins: 'Windscreen Mode 10 Mins',\n  windscreen20Mins: 'Windscreen Mode 20 Mins',\n  windscreen30Mins: 'Windscreen Mode 30 Mins',\n  heating10Mins: 'Heating Mode 10 Mins',\n  heating20Mins: 'Heating Mode 20 Mins',\n  heating30Mins: 'Heating Mode 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Test Action',\n  actionTimeout: 'Action Timeout',\n  language: 'Language',\n  modalHelp: 'Where to get ',\n  modalStep1: '1. Open ',\n  modalStep2: '2. Select smartapps in your location ',\n  modalStep3: '3. Select your smartapp ',\n  modalStep4: '4. get parameter ',\n  modelYear: 'Model Year',\n  any: 'Any',\n  phev2019: '2019',\n  battery: 'battery',\n  updateValue: 'Update Value',\n  loading: 'Loading...',\n  batteryFactor: 'Battery Factor',\n};\n\nexport function getLabels() {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage === 'Russian') {\n    return { ...Labels, ...RussianLabels };\n  }\n  return Labels;\n}\n\nexport function setLanguage(language) {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage !== language) {\n    if (language === 'Russian' || language === 'English') {\n      Cookies.set('Language', language);\n    }\n  }\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  // eslint-disable-next-line no-console\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Image, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Modal from 'antd/es/modal/Modal';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      actionTimeout: 0,\n      language: 'English',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n      batteryFactory: 1.0,\n      isModalVisible: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        language,\n        actionTimeout,\n        batteryFactory,\n        shard,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      if (actionTimeout) {\n        copyConfig.smartthings.timeout = actionTimeout;\n      }\n      if (language) {\n        copyConfig.language = language;\n      }\n      if (batteryFactory) {\n        copyConfig.batteryFactory = batteryFactory;\n      }\n      try {\n        let res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n        let status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => {\n            if (text === 'smartthingsAppId'\n                || text === 'smartthingsAppSecret') {\n              return (\n                <div>\n                  <a>{getLabels()[text] || text}</a>\n                  <Button\n                    type=\"text\"\n                    icon={<QuestionCircleOutlined />}\n                    onClick={() => {\n                      this.setState({ isModalVisible: true });\n                    }}\n                  />\n                  <Modal\n                    title={getLabels().modalHelp + getLabels()[text] || text}\n                    visible={this.state.isModalVisible}\n                    onCancel={(\n                    ) => { this.setState({ isModalVisible: false }); }}\n                    footer={[\n                      <Button\n                        key=\"ok\"\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({ isModalVisible: false });\n                        }}\n                      >\n                        Ok\n                      </Button>,\n                    ]}\n                  >\n                    <p>\n                      {getLabels().modalStep1}\n                      <Button\n                        type=\"link\"\n                        onClick={() => {\n                          window.open('https://graph.api.smartthings.com', '_blank');\n                        }}\n                      >\n                        https://graph.api.smartthings.com/\n                      </Button>\n                    </p>\n                    <p>{getLabels().modalStep2}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp1.png\"\n                    />\n                    <p>{getLabels().modalStep3}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp2.png\"\n                    />\n                    <p>{getLabels().modalStep4 + getLabels()[text] || text}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp3.png\"\n                    />\n                  </Modal>\n                </div>\n              );\n            }\n            return <a>{getLabels()[text] || text}</a>;\n          },\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'shard') {\n              return value;\n            }\n            if (data.name === 'language') {\n              return (\n                <Select\n                  defaultValue={this.state.language}\n                  style={{ width: 200 }}\n                  onChange={(lang) => {\n                    this.setState({ language: lang, changed: true });\n                  }}\n                >\n                  <Select.Option value=\"English\">English</Select.Option>\n                  <Select.Option value=\"Russian\">Russian</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n        actionTimeout: settings.data.smartthings.timeout,\n        batteryFactory: settings.data.batteryFactory || 1.0,\n        language: settings.data.language || 'English',\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [\n          {\n            name: 'macAddress',\n            value: settings.data.macAddress,\n          },\n          {\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n          {\n            name: 'actionTimeout',\n            value: settings.data.smartthings.timeout,\n          },\n          {\n            name: 'language',\n            value: settings.data.language,\n          },\n          {\n            name: 'batteryFactory',\n            value: settings.data.batteryFactory || 1.0,\n          },\n        ];\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={() => {\n                this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n};\n","import * as React from 'react';\nimport {\n  Button, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      modelYear: 'any',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n      updatable: false,\n      modelYear: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id: deviceId, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onTestClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/testDevice', 'POST', { id: deviceId });\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => (\n            <a>\n              {\n            (this.state.updatable) ? getLabels().updateValue : getLabels()[text] || text\n              }\n            </a>\n          ),\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  disabled={this.state.updatable}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'deviceId' || data.name === 'deviceLabel') {\n              return value;\n            }\n            if (data.name === 'testDevice') {\n              return (\n                <Button\n                  type=\"primary\"\n                  icon={<PoweroffOutlined />}\n                  loading={this.state.loading}\n                  onClick={() => this.onTestClick()}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        modelYear: device.modelYear,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n        {\n          name: 'testDevice',\n          value: '',\n        },\n      ];\n\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu, Spin } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport { AppstoreAddOutlined, DesktopOutlined, UserOutlined } from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Title from 'antd/es/typography/Title';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      this.setState({ loading: true });\n      const newState = {};\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        let settings = JSON.parse(data);\n        if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n          await fetchBackend('/ui/settings/syncDevices');\n        }\n        const res = await fetchBackend('/ui/settings');\n        settings = JSON.parse(res.data);\n        newState.settings = settings;\n        if (selectorPage) {\n          newState.selectorPage = selectorPage;\n        }\n        if (id) {\n          newState.componentId = id;\n        }\n      } finally {\n        newState.loading = false;\n        this.setState(newState);\n      }\n    }\n\n    onCollapse = (collapsed) => {\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings, loading,\n      } = this.state;\n      return loading ? (\n        <div>\n          <Spin size=\"large\" />\n          <Title>{getLabels().loading}</Title>\n        </div>\n      ) : (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}