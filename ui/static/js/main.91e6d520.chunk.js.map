{"version":3,"sources":["logo.svg","utils/restCalls.js","utils/Localization.js","components/SmartthingsSettings.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","Labels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","getLabels","SmartthingsSettings","state","changed","loading","parse","this","setState","port","portUI","smartthings","appId","appSecret","authenticationType","connectionType","copyConfig","res","status","event","message","props","reload","title","dataIndex","key","render","text","value","name","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","Paragraph","editable","showIcon","type","closable","columns","getColumns","dataSource","block","disabled","onClick","onSaveClick","React","SmartthingsAddDevice","canSave","id","uuidv4","CONTENTS","SmartthingsViewDevice","validation","style","width","onActionChange","Option","loadingPage","deviceId","device","find","d","prevProps","defaultValue","danger","onDeleteClick","AddUser","newConfigurations","push","ViewUser","userId","user","u","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","log","onSmartThingsSettingClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","icon","DesktopOutlined","AppstoreAddOutlined","map","UserOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91e6d520.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n    console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n    return new Promise((resolve, reject) => {\n        fetch({\n            url,\n            method,\n            headers,\n            transformResponse: req => req,\n            withCredentials: true,\n            timeout: 29000,\n        }).then((response) => {\n            resolve(response);\n        }).catch((response) => {\n            errorHandler(response);\n            reject(response);\n        });\n    });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n    return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n    return new Promise((resolve, reject) => {\n        fetch({\n            url,\n            method,\n            data,\n            transformResponse: req => req,\n            headers,\n            withCredentials: true,\n            timeout: 29000,\n        }).then((response) => {\n            resolve(response);\n        }).catch((response) => {\n            errorHandler(response);\n            reject(response);\n        });\n    });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n    const headerMap= headers||{}\n    headerMap['Content-Type']='application/json';\n    return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","const Labels = {\n    servicePort: 'Service Port',\n    uiPort: 'UI Port',\n    smartthingsAppId: 'Smartthings Application Id',\n    smartthingsAppSecret: 'Smartthings Application Secret',\n    save: 'Save',\n    settings: 'Settings',\n    devices: 'Devices',\n    addDevice: 'Add Device',\n    users: 'Users',\n    addUser: 'Add User',\n    actionId: 'Action',\n    deviceLabel: 'Device Label',\n    cooling10Mins: 'Cooling 10 Mins',\n    cooling20Mins: 'Cooling 20 Mins',\n    cooling30Mins: 'Cooling 30 Mins',\n    windscreen10Mins: 'Windscreen 10 Mins',\n    windscreen20Mins: 'Windscreen 20 Mins',\n    windscreen30Mins: 'Windscreen 30 Mins',\n    heating10Mins: 'Heating 10 Mins',\n    heating20Mins: 'Heating 20 Mins',\n    heating30Mins: 'Heating 30 Mins',\n    airconOn: 'Air conditioner On',\n    airconOff: 'Air conditioner Off',\n    headlightsOn: 'Headlights On',\n    headlightsOff: 'Headlights Off',\n    parkinglightsOn: 'Parkinglights On',\n    parkinglightsOff: 'Parkinglights Off',\n    username: 'Username',\n    password: 'Password',\n    delete: 'Delete',\n    shard: 'Smartthings Portal Shard',\n    macAddress: 'Outlander PHEV Client Mac Address',\n    keycloakJson: 'Securing Applications using keycloak.json',\n}\n\nexport function getLabels() {\n    return Labels;\n}\n\n","import * as React from \"react\";\nimport {fetchBackend, sendToBackend} from \"../utils/restCalls\";\nimport {Alert, Button, Table} from \"antd\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport {getLabels} from \"../utils/Localization\";\nimport MaskedInput from 'antd-mask-input'\nimport TextArea from \"antd/es/input/TextArea\";\n\n\nexport class SmartthingsSettings extends React.Component {\n\n    state = {\n        settings: {},\n        servicePort: '',\n        uiPort: '',\n        smartthingsAppId: '',\n        smartthingsAppSecret: '',\n        macAddress: '',\n        changed: false,\n        loading: false,\n        error: '',\n        keycloakJson: ''\n    };\n\n    async reload() {\n        const {data} = await fetchBackend('/ui/settings');\n        const settings = JSON.parse(data);\n        this.setState({\n            settings: settings,\n            servicePort: settings.data.port,\n            uiPort: settings.data.portUI,\n            smartthingsAppId: settings.data.smartthings.appId,\n            smartthingsAppSecret: settings.data.smartthings.appSecret,\n            macAddress: settings.data.macAddress,\n            shard: settings.data.smartthings.shard,\n            authenticationType: settings.data.connectionType\n        });\n    }\n\n    async onSaveClick() {\n        const {\n            uiPort,\n            servicePort,\n            settings,\n            smartthingsAppId,\n            smartthingsAppSecret,\n            macAddress,\n            keycloakJson,\n            shard,\n        } = this.state;\n        this.setState({loading: true});\n        const copyConfig = JSON.parse(JSON.stringify(settings.data));\n        if (smartthingsAppId) {\n            copyConfig.smartthings.appId = smartthingsAppId;\n        }\n        if (smartthingsAppSecret) {\n            copyConfig.smartthings.appSecret = smartthingsAppSecret;\n        }\n        if (shard) {\n            copyConfig.smartthings.shard = shard;\n        }\n        if (macAddress) {\n            copyConfig.macAddress = macAddress;\n        }\n        if (servicePort) {\n            copyConfig.port = servicePort;\n        }\n        if (uiPort) {\n            copyConfig.portUI = uiPort;\n        }\n        try {\n            let res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n            let status = JSON.parse(res.data);\n            if (status.status === 'OK') {\n                res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n                status = JSON.parse(res.data);\n                if (status.status === 'OK') {\n                    const event = {changed: false};\n                    if (keycloakJson) {\n                        res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', {keycloakJson});\n                        status = JSON.parse(res.data);\n                        if (status.status !== 'OK') {\n                            event.error = status.message;\n                        } else {\n                            event.error = '';\n                        }\n                    }\n                    await this.props.reload();\n                    await this.reload();\n                    this.setState(event);\n                } else {\n                    this.setState({error: status.message});\n                }\n            } else {\n                this.setState({error: status.message});\n            }\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    getColumns() {\n        return [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                render: text => <a>{getLabels()[text] || text}</a>,\n            },\n            {\n                title: 'Value',\n                dataIndex: 'value',\n                key: 'value',\n                render: (text, data) => {\n                    const value = this.state[data.name];\n                    if (data.name === 'macAddress') {\n                        return <MaskedInput mask=\"##:##:##:##:##:##\" name={getLabels()['macAddress'] || text}\n                                            value={value} placeholder=\"xx:xx:xx:xx:xx:xx\" onChange={\n                            (newValue) => {\n                                if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                    const newState = {changed: true};\n                                    newState.macAddress = newValue.target.value;\n                                    this.setState(newState)\n                                }\n                            }\n                        }/>;\n                    }\n                    if (data.name === 'keycloakJson') {\n                        return <TextArea\n                            onChange={\n                                (newValue) => {\n                                    if (newValue.target.value) {\n                                        const newState = {changed: true};\n                                        newState.keycloakJson = newValue.target.value;\n                                        this.setState(newState)\n                                    }\n                                }\n                            }\n                            placeholder=\"Keycloak Json\"\n                            autoSize={{minRows: 3, maxRows: 5}}\n                        />;\n                    }\n                    if (data.name === 'shard') {\n                        return value;\n                    } else {\n                        return <Paragraph editable={{\n                            onChange: (newValue) => {\n                                if (newValue) {\n                                    const newState = {changed: true};\n                                    newState[data.name] = newValue;\n                                    this.setState(newState)\n                                }\n                            }\n                        }}>{value}</Paragraph>\n                    }\n                }\n            }\n        ];\n    }\n\n    async componentDidMount() {\n        await this.reload();\n    }\n\n\n    render() {\n        const {settings, changed, loading, error} = this.state;\n        if (settings.status === 'OK') {\n            const data = [\n                {\n                    name: 'macAddress',\n                    value: settings.data.macAddress\n                },\n                {\n                    name: 'shard',\n                    value: settings.data.smartthings.shard\n                },\n                {\n                    name: 'smartthingsAppId',\n                    value: settings.data.smartthings.appId\n                },\n                {\n                    name: 'smartthingsAppSecret',\n                    value: settings.data.smartthings.appSecret\n                },\n                {\n                    name: 'keycloakJson',\n                    value: ''\n                },\n            ]\n            return <div>\n                {error ? <Alert\n                    message={error}\n                    showIcon\n                    type=\"error\"\n                    closable\n                /> : null}\n                <Table columns={this.getColumns()} dataSource={data}/>\n                <Button type=\"primary\" loading={loading} block disabled={!changed} onClick={() => {\n                    this.onSaveClick()\n                }}>\n                    {getLabels()['save'] || 'Save'}\n                </Button>\n            </div>\n        }\n        return null\n\n    }\n}\n","import * as React from \"react\";\nimport {Button, Select, Table} from \"antd\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport {getLabels} from \"../utils/Localization\";\nimport {Option} from \"antd/es/mentions\";\nimport {sendToBackend} from \"../utils/restCalls\";\nimport {CONTENTS} from \"./RemoteCtrlContentHandler\";\nimport {v4 as uuidv4} from 'uuid';\n\nexport class SmartthingsAddDevice extends React.Component {\n\n    state = {\n        loading: false,\n        canSave: false,\n        deviceLabel: '',\n        actionId: '',\n    };\n\n    async onSaveClick() {\n        const {\n            deviceLabel,\n            actionId,\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            const id = uuidv4();\n            await sendToBackend('/ui/settings/addDevice', 'POST',  {id: id, deviceLabel, actionId});\n            await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    validation(deviceLabel, actionId) {\n        return (deviceLabel || this.state.deviceLabel && actionId || this.state.actionId);\n    }\n\n    onActionChange(actionId) {\n        this.setState({actionId, canSave: this.validation(null, actionId)});\n    }\n\n    getColumns() {\n        return [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                render: text => <a>{getLabels()[text] || text}</a>,\n            },\n            {\n                title: 'Value',\n                dataIndex: 'value',\n                key: 'value',\n                render: (text, data) => {\n                    const value = this.state[data.name];\n                    if (data.name === 'actionId') {\n                        return <Select style={{width: 200}} onChange={(event) => {\n                            this.onActionChange(event)\n                        }}>\n                            <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                            <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                            <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                            <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                            <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                            <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                        </Select>\n                    } else {\n                        return <Paragraph editable={{\n                            onChange: (newValue) => {\n                                if (newValue) {\n                                    const newState = {canSave: this.validation(newValue)};\n                                    newState[data.name] = newValue;\n                                    this.setState(newState);\n                                }\n                            }\n                        }}>{value}</Paragraph>\n                    }\n                }\n            }\n        ];\n    }\n\n\n    render() {\n        const {\n            loading,\n            canSave,\n            actionId,\n            deviceLabel,\n        } = this.state;\n\n        const data = [\n            {\n                name: 'deviceLabel',\n                value: deviceLabel\n            },\n            {\n                name: 'actionId',\n                value: actionId\n            },\n        ]\n\n        return <div>\n            <Table columns={this.getColumns()} dataSource={data}/>\n            <Button type=\"primary\" loading={loading} block disabled={!canSave} onClick={async () => {\n                await this.onSaveClick()\n            }}>\n                {getLabels()['save'] || 'Save'}\n            </Button>\n        </div>\n\n    }\n}\n","import * as React from \"react\";\nimport {Button, Select, Spin, Table} from \"antd\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport {getLabels} from \"../utils/Localization\";\nimport {fetchBackend, sendToBackend} from \"../utils/restCalls\";\nimport {CONTENTS} from \"./RemoteCtrlContentHandler\";\nimport {v4 as uuidv4} from 'uuid';\n\nexport class SmartthingsViewDevice extends React.Component {\n\n    state = {\n        loadingPage: false,\n        loading: false,\n        canSave: false,\n        deviceLabel: '',\n        actionId: '',\n        deviceId: '',\n    };\n\n    async reload() {\n        this.setState({\n            loadingPage:true\n        });\n        const {data} = await fetchBackend('/ui/settings');\n        const settings = JSON.parse(data);\n        const device = settings.data.smartthings.devices.find((d)=>{return d.id === this.props.deviceId});\n        this.setState({\n            actionId:device.actionId,\n            deviceLabel:device.deviceLabel,\n            deviceId: device.id,\n            loadingPage:false,\n        });\n    }\n\n\n    async onDeleteClick() {\n        const {\n            deviceId\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            await sendToBackend('/ui/settings/deleteDevice', 'POST', {deviceId});\n            await this.props.reload(CONTENTS.SmartthingsSettings);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    async componentDidMount() {\n        await this.reload();\n    }\n    async componentDidUpdate(prevProps) {\n        if (this.props.deviceId !== prevProps.deviceId) {\n            await this.reload();\n        }\n    }\n\n    async onSaveClick() {\n        const {\n            deviceLabel,\n            actionId,\n            deviceId\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            await sendToBackend('/ui/settings/addDevice', 'POST',  {id: deviceId, deviceLabel, actionId});\n            await this.props.reload(CONTENTS.SmartthingsViewDevice,deviceId);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    validation(deviceLabel, actionId) {\n        return (deviceLabel || this.state.deviceLabel && actionId || this.state.actionId);\n    }\n\n    onActionChange(actionId) {\n        this.setState({actionId, canSave: this.validation(null, actionId)});\n    }\n\n    getColumns() {\n        return [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                render: text => <a>{getLabels()[text] || text}</a>,\n            },\n            {\n                title: 'Value',\n                dataIndex: 'value',\n                key: 'value',\n                render: (text, data) => {\n                    const value = this.state[data.name];\n                    if (data.name === 'actionId') {\n                        return <Select defaultValue={this.state.actionId} style={{width: 200}} onChange={(event) => {\n                            this.onActionChange(event)\n                        }}>\n                            <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                            <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                            <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                            <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                            <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                            <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                        </Select>\n                    } else if (data.name === 'deviceId') {\n                        return value;\n                    } else {\n                        return <Paragraph editable={{\n                            onChange: (newValue) => {\n                                if (newValue) {\n                                    const newState = {canSave: this.validation(newValue)};\n                                    newState[data.name] = newValue;\n                                    this.setState(newState);\n                                }\n                            }\n                        }}>{value}</Paragraph>\n                    }\n                }\n            }\n        ];\n    }\n\n\n    render() {\n        const {\n            loading,\n            loadingPage,\n            canSave,\n            actionId,\n            deviceId,\n            deviceLabel,\n        } = this.state;\n\n        const data = [\n            {\n                name: 'deviceId',\n                value: deviceId\n            },\n            {\n                name: 'deviceLabel',\n                value: deviceLabel\n            },\n            {\n                name: 'actionId',\n                value: actionId\n            },\n        ]\n\n        return loadingPage? <Spin />:<div>\n            <Table columns={this.getColumns()} dataSource={data}/>\n            <Button type=\"primary\" loading={loading} block disabled={!canSave} onClick={async () => {\n                await this.onSaveClick()\n            }}>\n                {getLabels()['save'] || 'Save'}\n            </Button>\n            <Button type=\"primary\" loading={loading} block danger onClick={async () => {\n                await this.onDeleteClick()\n            }}>\n                {getLabels()['delete'] || 'Delete'}\n            </Button>\n        </div>\n\n    }\n}\n","import * as React from \"react\";\nimport {Button, Table} from \"antd\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport {getLabels} from \"../utils/Localization\";\nimport {sendToBackend} from \"../utils/restCalls\";\nimport {CONTENTS} from \"./RemoteCtrlContentHandler\";\nimport {v4 as uuidv4} from 'uuid';\n\nexport class AddUser extends React.Component {\n\n    state = {\n        loading: false,\n        canSave: false,\n        username: '',\n        password: '',\n    };\n\n    async onSaveClick() {\n        const {\n            username,\n            password,\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            const newConfigurations = {\n                users: []\n            };\n            const id = uuidv4();\n            newConfigurations.users.push(\n                {id: id, username , password}\n            )\n            await sendToBackend('/ui/settings', 'POST', newConfigurations);\n            await this.props.reload(CONTENTS.ViewUser, id);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    validation(data) {\n        return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    onActionChange(actionId) {\n        this.setState({actionId, canSave: this.validation(null, actionId)});\n    }\n\n    getColumns() {\n        return [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                render: text => <a>{getLabels()[text] || text}</a>,\n            },\n            {\n                title: 'Value',\n                dataIndex: 'value',\n                key: 'value',\n                render: (text, data) => {\n                    const value = this.state[data.name];\n                    return <Paragraph editable={{\n                        onChange: (newValue) => {\n                            if (newValue) {\n                                const d ={};\n                                d[data.name]=newValue;\n                                const newState = {canSave: this.validation(d)};\n                                newState[data.name] = newValue;\n                                this.setState(newState);\n                            }\n                        }\n                    }}>{value}</Paragraph>\n                }\n            }\n        ];\n    }\n\n\n    render() {\n        const {\n            loading,\n            canSave,\n            username,\n            password,\n        } = this.state;\n\n        const data = [\n            {\n                name: 'username',\n                value: username\n            },\n            {\n                name: 'password',\n                value: password\n            },\n        ]\n\n        return <div>\n            <Table columns={this.getColumns()} dataSource={data}/>\n            <Button type=\"primary\" loading={loading} block disabled={!canSave} onClick={async () => {\n                await this.onSaveClick()\n            }}>\n                {getLabels()['save'] || 'Save'}\n            </Button>\n        </div>\n\n    }\n}\n","import * as React from \"react\";\nimport {Button, Table} from \"antd\";\nimport Paragraph from \"antd/es/typography/Paragraph\";\nimport {getLabels} from \"../utils/Localization\";\nimport {fetchBackend, sendToBackend} from \"../utils/restCalls\";\nimport {CONTENTS} from \"./RemoteCtrlContentHandler\";\n\nexport class ViewUser extends React.Component {\n\n    state = {\n        loadingPage: false,\n        loading: false,\n        canSave: false,\n        username: '',\n        password: '',\n        userId: ''\n    };\n\n\n    async reload() {\n        this.setState({\n            loadingPage: true\n        });\n        const {data} = await fetchBackend('/ui/settings');\n        const settings = JSON.parse(data);\n        const user = settings.data.users.find((u) => {\n            return u.id === this.props.userId\n        });\n        this.setState({\n            username: user.username,\n            password: user.password,\n            userId: user.id,\n            loadingPage: false,\n        });\n    }\n\n    async componentDidMount() {\n        await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n        if (this.props.userId !== prevProps.userId) {\n            await this.reload();\n        }\n    }\n\n    async onSaveClick() {\n        const {\n            username,\n            password,\n            userId\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            const newConfigurations = {\n                users: []\n            };\n            const id = userId;\n            newConfigurations.users.push(\n                {id: id, username, password}\n            )\n            await sendToBackend('/ui/settings', 'POST', newConfigurations);\n            await this.props.reload(CONTENTS.ViewUser, id);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n    async onSaveClick() {\n        const {\n            username,\n            password,\n            userId\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            const newConfigurations = {\n                users: []\n            };\n            const id = userId;\n            newConfigurations.users.push(\n                {id: id, username, password}\n            )\n            await sendToBackend('/ui/settings', 'POST', newConfigurations);\n            await this.props.reload(CONTENTS.ViewUser, id);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    async onDeleteClick() {\n        const {\n            userId\n        } = this.state;\n        this.setState({loading: true});\n        try {\n            await sendToBackend('/ui/settings/deleteUser', 'POST', {userId});\n            await this.props.reload(CONTENTS.SmartthingsSettings);\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n\n    validation(deviceLabel, actionId) {\n        return (deviceLabel || this.state.deviceLabel && actionId || this.state.actionId);\n    }\n\n    onActionChange(actionId) {\n        this.setState({actionId, canSave: this.validation(null, actionId)});\n    }\n\n    getColumns() {\n        return [\n            {\n                title: 'Name',\n                dataIndex: 'name',\n                key: 'name',\n                render: text => <a>{getLabels()[text] || text}</a>,\n            },\n            {\n                title: 'Value',\n                dataIndex: 'value',\n                key: 'value',\n                render: (text, data) => {\n                    const value = this.state[data.name];\n                    return data.name === 'userId'? value : <Paragraph editable={{\n                        onChange: (newValue) => {\n                            if (newValue) {\n                                const newState = {canSave: this.validation(newValue)};\n                                newState[data.name] = newValue;\n                                this.setState(newState);\n                            }\n                        }\n                    }}>{data.name === 'password' && value ? '*******' : value}</Paragraph>\n                }\n            }\n        ];\n    }\n\n\n    render() {\n        const {\n            loadingPage,\n            loading,\n            canSave,\n            username,\n            userId,\n            password,\n        } = this.state;\n\n        const data = [\n            {\n                name: 'userId',\n                value: userId\n            },\n            {\n                name: 'username',\n                value: username\n            },\n            {\n                name: 'password',\n                value: password\n            },\n        ]\n\n        return loadingPage? <spin/>: <div>\n            <Table columns={this.getColumns()} dataSource={data}/>\n            <Button type=\"primary\" loading={loading} block disabled={!canSave} onClick={async () => {\n                await this.onSaveClick()\n            }}>\n                {getLabels()['save'] || 'Save'}\n            </Button>\n            <Button type=\"primary\" loading={loading} block danger onClick={async () => {\n                await this.onDeleteClick()\n            }}>\n                {getLabels()['delete'] || 'Delete'}\n            </Button>\n        </div>\n\n    }\n}\n","import * as React from \"react\";\nimport {SmartthingsSettings} from \"./SmartthingsSettings\";\nimport {SmartthingsAddDevice} from \"./SmartthingsAddDevice\";\nimport {SmartthingsViewDevice} from \"./SmartthingsViewDevice\";\nimport {AddUser} from \"./AddUser\";\nimport {ViewUser} from \"./ViewUser\";\n\n\nexport const CONTENTS = {\n    SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n    SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n    SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n    AddUser: 'ADD_USER',\n    ViewUser: 'VIEW_USER',\n}\n\nexport class RemoteCtrlContentHandler extends React.Component {\n\n\n    render() {\n        const contentPage = this.props.name;\n        const reload = this.props.reload;\n        const id = this.props.id;\n        if (contentPage === CONTENTS.SmartthingsSettings) {\n            return <SmartthingsSettings reload={reload}/>\n        } else if (contentPage === CONTENTS.SmartthingsAddDevice) {\n            return <SmartthingsAddDevice reload={reload}/>\n        } else if (contentPage === CONTENTS.SmartthingsViewDevice) {\n            return <SmartthingsViewDevice reload={reload} deviceId={id}/>\n        } else if (contentPage === CONTENTS.AddUser) {\n            return <AddUser reload={reload}/>\n        }else if (contentPage === CONTENTS.ViewUser) {\n            return <ViewUser reload={reload} userId={id}/>\n        }\n        return null;\n    }\n}\n","import * as React from \"react\";\nimport Sider from \"antd/lib/layout/Sider\";\nimport {Menu} from \"antd\";\nimport Layout, {Footer, Header} from \"antd/lib/layout/layout\";\nimport {AppstoreAddOutlined, DesktopOutlined, UserOutlined,} from '@ant-design/icons';\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport {CONTENTS, RemoteCtrlContentHandler} from \"./RemoteCtrlContentHandler\";\nimport {fetchBackend} from \"../utils/restCalls\";\nimport {getLabels} from \"../utils/Localization\";\n\nexport class RemoteCtrlMain extends React.Component {\n\n    state = {\n        collapsed: false,\n        selectorPage: null,\n        settings: null,\n        componentId: null,\n    };\n\n    onCollapse = collapsed => {\n        console.log(collapsed);\n        this.setState({collapsed});\n    };\n\n    reload = async (selectorPage, id) => {\n        const {data} = await fetchBackend('/ui/settings');\n        let settings = JSON.parse(data);\n        if (settings.data.smartthings.appId && settings.data.smartthings.appSecret){\n            await fetchBackend('/ui/settings/syncDevices');\n        }\n        const res = await fetchBackend('/ui/settings');\n        settings = JSON.parse(res.data);\n        const newState = {settings: settings};\n        if (selectorPage) {\n            newState.selectorPage = selectorPage;\n        }\n        if (id) {\n            newState.componentId = id;\n        }\n        this.setState(newState);\n    }\n\n    async componentDidMount() {\n        await this.reload();\n    }\n\n    onSmartThingsSettingClick = () => {\n        this.setState({selectorPage: CONTENTS.SmartthingsSettings});\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n        this.setState({selectorPage: CONTENTS.SmartthingsAddDevice});\n    };\n\n    onAddUsersClick = () => {\n        this.setState({selectorPage: CONTENTS.AddUser});\n    };\n\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n        this.setState({\n            selectorPage: CONTENTS.SmartthingsViewDevice,\n            componentId:deviceId\n        });\n    };\n    onViewUserClick = (userId) => {\n        this.setState({\n            selectorPage: CONTENTS.ViewUser,\n            componentId:userId\n        });\n    };\n\n    render() {\n        const {collapsed, selectorPage, componentId, settings} = this.state;\n        return (\n            <Layout style={{minHeight: '100vh'}}>\n                <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                        <Menu.Item key=\"1\" icon={<DesktopOutlined/>}\n                                   onClick={this.onSmartThingsSettingClick}>{getLabels().settings}\n                        </Menu.Item>\n                        <SubMenu key=\"devices\" icon={<AppstoreAddOutlined/>} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.appId &&  settings.data.smartthings.appSecret) }>\n                            {(settings && settings.data.smartthings.devices) ?\n                                settings.data.smartthings.devices.map((device) => {\n                                    return <Menu.Item key={device.id} onClick={() => {\n                                        this.onSmartThingsViewDeviceClick(device.id);\n                                    }}>{device.deviceLabel}</Menu.Item>\n                                })\n                                : null}\n                            <Menu.Item key=\"addDevice\"\n                                       onClick={this.onSmartThingsAddDeviceClick}>{getLabels().addDevice}</Menu.Item>\n                        </SubMenu>{\n                        settings && settings.data.connectionType === 'local'?\n                        <SubMenu key=\"sub1\" icon={<UserOutlined/>} title={getLabels().users}>\n                            {(settings && settings.data.users) ?\n                                settings.data.users.map((user) => {\n                                    return <Menu.Item key={user.id} onClick={() => {\n                                        this.onViewUserClick(user.id);\n                                    }}>{user.username}</Menu.Item>\n                                })\n                                : null}\n                            <Menu.Item key=\"addUser\" onClick={()=>{\n                                this.onAddUsersClick()\n                            }}>{getLabels().addUser}</Menu.Item>\n                        </SubMenu>:null}\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{padding: 0}}/>\n                    <RemoteCtrlContentHandler\n                        name={selectorPage || CONTENTS.SmartthingsSettings}\n                        id={componentId}\n                        reload={this.reload}\n                    />\n                    <Footer style={{textAlign: 'center'}}> ©2021 Created by Vasyl Zakharchenko</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport {RemoteCtrlMain} from \"./components/RemoteCtrlMain\";\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}