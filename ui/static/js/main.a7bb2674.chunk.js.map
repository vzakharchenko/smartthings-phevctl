{"version":3,"sources":["utils/RussianLanguage.js","utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["RussianLabels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","testDevice","actionTimeout","language","modalHelp","modalStep1","modalStep2","modalStep3","modalStep4","Labels","getLabels","Cookies","get","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","loading","isModalVisible","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","res","status","event","message","props","title","dataIndex","key","render","text","type","icon","QuestionCircleOutlined","onClick","Modal","visible","onCancel","footer","window","open","width","src","value","name","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","defaultValue","style","lang","Option","Paragraph","editable","set","authenticationType","connectionType","showIcon","closable","columns","getColumns","dataSource","block","disabled","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","onActionChange","SmartthingsViewDevice","loadingPage","deviceId","prevProps","PoweroffOutlined","onTestClick","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","push","ViewUser","userId","user","u","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","log","onSmartThingsSettingClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","DesktopOutlined","AppstoreAddOutlined","map","UserOutlined","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7bb2674.chunk.js","sourcesContent":["export const RussianLabels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Сохранить',\n  settings: 'Настройки',\n  devices: 'Устройства',\n  addDevice: 'Добавить Устройство',\n  users: 'Пользователи',\n  addUser: 'Добавить Пользователя',\n  actionId: 'Действие',\n  deviceLabel: 'Название устройства',\n  cooling10Mins: 'Режим Охлаждения на 10 Мин.',\n  cooling20Mins: 'Режим Охлаждения на 20 Мин.',\n  cooling30Mins: 'Режим Охлаждения на 30 Мин.',\n  windscreen10Mins: 'Обогрев лобового окна на 10 мин.',\n  windscreen20Mins: 'Обогрев лобового окна на 20 мин.',\n  windscreen30Mins: 'Обогрев лобового окна на 30 мин.',\n  heating10Mins: 'Режим Отопителя на 10 мин.',\n  heating20Mins: 'Режим Отопителя на 20 мин.',\n  heating30Mins: 'Режим Отопителя на 30 мин.',\n  airconOn: 'Включить Климат контроль',\n  airconOff: 'Отключить Климат Контроль',\n  headlightsOn: 'Включить Фары',\n  headlightsOff: 'Выключить Фары',\n  parkinglightsOn: 'Включить Парковочные огни',\n  parkinglightsOff: 'Выключить Парковочные огни',\n  username: 'Имя пользователя',\n  password: 'Пароль',\n  delete: 'Удалить',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'MAC адрес',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Протестировать устройство',\n  actionTimeout: 'Максимальное время выполнения ',\n  language: 'Язык',\n  modalHelp: 'Где взять параметр ',\n  modalStep1: '1. Откройте портал ',\n  modalStep2: '2. Выбрать smartapps в вашей локации ',\n  modalStep3: '3. Выберите созданное вами \"remote-ctrl-gsm\" ',\n  modalStep4: '4. Возмите со страницы параметр ',\n};\n","import Cookies from 'js-cookie';\nimport { RussianLabels } from './RussianLanguage';\n\nconst Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling Mode 10 Mins',\n  cooling20Mins: 'Cooling Mode 20 Mins',\n  cooling30Mins: 'Cooling Mode 30 Mins',\n  windscreen10Mins: 'Windscreen Mode 10 Mins',\n  windscreen20Mins: 'Windscreen Mode 20 Mins',\n  windscreen30Mins: 'Windscreen Mode 30 Mins',\n  heating10Mins: 'Heating Mode 10 Mins',\n  heating20Mins: 'Heating Mode 20 Mins',\n  heating30Mins: 'Heating Mode 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Test Action',\n  actionTimeout: 'Action Timeout',\n  language: 'Language',\n  modalHelp: 'Where to get ',\n  modalStep1: '1. Open ',\n  modalStep2: '2. Select smartapps in your location ',\n  modalStep3: '3. Select your smartapp ',\n  modalStep4: '4. get parameter ',\n};\n\nexport function getLabels() {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage === 'Russian') {\n    return { ...Labels, ...RussianLabels };\n  }\n  return Labels;\n}\n\nexport function setLanguage(language) {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage !== language) {\n    if (language === 'Russian' || language === 'English') {\n      Cookies.set('Language', language);\n    }\n  }\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Image, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport Modal from 'antd/es/modal/Modal';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      actionTimeout: 0,\n      language: 'English',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n      isModalVisible: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        language,\n        actionTimeout,\n        shard,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      if (actionTimeout) {\n        copyConfig.smartthings.timeout = actionTimeout;\n      }\n      if (language) {\n        copyConfig.language = language;\n      }\n      try {\n        let res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n        let status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => {\n            if (text === 'smartthingsAppId'\n                || text === 'smartthingsAppSecret') {\n              return (\n                <div>\n                  <a>{getLabels()[text] || text}</a>\n                  <Button\n                    type=\"text\"\n                    icon={<QuestionCircleOutlined />}\n                    onClick={() => {\n                      this.setState({ isModalVisible: true });\n                    }}\n                  />\n                  <Modal\n                    title={getLabels().modalHelp + getLabels()[text] || text}\n                    visible={this.state.isModalVisible}\n                    onCancel={(\n                    ) => { this.setState({ isModalVisible: false }); }}\n                    footer={[\n                      <Button\n                        key=\"ok\"\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({ isModalVisible: false });\n                        }}\n                      >\n                        Ok\n                      </Button>,\n                    ]}\n                  >\n                    <p>\n                      {getLabels().modalStep1}\n                      <Button\n                        type=\"link\"\n                        onClick={() => {\n                          window.open('https://graph.api.smartthings.com', '_blank');\n                        }}\n                      >\n                        https://graph.api.smartthings.com/\n                      </Button>\n                    </p>\n                    <p>{getLabels().modalStep2}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp1.png\"\n                    />\n                    <p>{getLabels().modalStep3}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp2.png\"\n                    />\n                    <p>{getLabels().modalStep4 + getLabels()[text] || text}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp3.png\"\n                    />\n                  </Modal>\n                </div>\n              );\n            }\n            return <a>{getLabels()[text] || text}</a>;\n          },\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'shard') {\n              return value;\n            }\n            if (data.name === 'language') {\n              return (\n                <Select\n                  defaultValue={this.state.language}\n                  style={{ width: 200 }}\n                  onChange={(lang) => {\n                    this.setState({ language: lang, changed: true });\n                  }}\n                >\n                  <Select.Option value=\"English\">English</Select.Option>\n                  <Select.Option value=\"Russian\">Russian</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n        actionTimeout: settings.data.smartthings.timeout,\n        language: settings.data.language || 'English',\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [\n          {\n            name: 'macAddress',\n            value: settings.data.macAddress,\n          },\n          {\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n          {\n            name: 'actionTimeout',\n            value: settings.data.smartthings.timeout,\n          },\n          {\n            name: 'language',\n            value: settings.data.language,\n          },\n        ];\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={() => {\n                this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n};\n","import * as React from 'react';\nimport { Button, Select, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', { id: deviceId, deviceLabel, actionId });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onTestClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/testDevice', 'POST', { id: deviceId });\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                </Select>\n              );\n            } if (data.name === 'deviceId' || data.name === 'deviceLabel') {\n              return value;\n            } if (data.name === 'testDevice') {\n              return (\n                <Button\n                  type=\"primary\"\n                  icon={<PoweroffOutlined />}\n                  loading={this.state.loading}\n                  onClick={() => this.onTestClick()}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n        {\n          name: 'testDevice',\n          value: '',\n        },\n      ];\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: 'Value',\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport { AppstoreAddOutlined, DesktopOutlined, UserOutlined } from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      const { data } = await fetchBackend('/ui/settings');\n      let settings = JSON.parse(data);\n      if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n        await fetchBackend('/ui/settings/syncDevices');\n      }\n      const res = await fetchBackend('/ui/settings');\n      settings = JSON.parse(res.data);\n      const newState = { settings };\n      if (selectorPage) {\n        newState.selectorPage = selectorPage;\n      }\n      if (id) {\n        newState.componentId = id;\n      }\n      this.setState(newState);\n    }\n\n    onCollapse = (collapsed) => {\n      console.log(collapsed);\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings,\n      } = this.state;\n      return (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}