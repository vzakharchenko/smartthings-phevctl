{"version":3,"sources":["utils/RussianLanguage.js","utils/Localization.js","utils/restCalls.js","components/SmartthingsSettings.js","components/Constants.js","components/SmartthingsAddDevice.js","components/SmartthingsViewDevice.js","components/AddUser.js","components/ViewUser.js","components/SmartthingsSMS.js","components/CronSettings.js","components/NotificationSettings.js","components/RemoteCtrlContentHandler.js","components/RemoteCtrlMain.js","App.js","reportWebVitals.js","index.js"],"names":["RussianLabels","servicePort","uiPort","smartthingsAppId","smartthingsAppSecret","save","settings","devices","addDevice","users","addUser","actionId","deviceLabel","cooling10Mins","cooling20Mins","cooling30Mins","windscreen10Mins","windscreen20Mins","windscreen30Mins","heating10Mins","heating20Mins","heating30Mins","airconOn","airconOff","headlightsOn","headlightsOff","parkinglightsOn","parkinglightsOff","username","password","delete","shard","macAddress","keycloakJson","testDevice","actionTimeout","language","modalHelp","modalStep1","modalStep2","modalStep3","modalStep4","modelYear","any","phev2019","battery","updateValue","loading","batteryFactory","doors","forceUpdate","executeUpdate","hvac","sendNotification","notification","testNotification","testNotificationLabel","sms","smsPassword","phone","phoneHuawei","huaweiPassword","huaweiInstallation","huaweiRecieveSMS","huaweiSMS","mikrotikScript","mikrotikScheduler","smsCommands","smsCar","useSmartthings","smsCodes","cron","sendSMSNotification","theft","Yes","No","useCloud","both","onlySMS","onlyPush","none","noneSMS","code","description","name","value","role","noneRole","logout","evseSlow","evseFastCharge","evseDisableCharge","Labels","mikrotikSMS","huaweiHiLinkSMS","updateDevices","syncDevices","cloudDevices","getLabels","Cookies","get","setLanguage","set","fetch","require","REACT_BACKEND_URL","errorHandler","response","console","error","data","fetchData","url","method","headers","Promise","resolve","reject","transformResponse","req","withCredentials","timeout","then","catch","fetchBackend","a","sendData","sendToBackend","headerMap","JSON","stringify","SmartthingsSettings","state","changed","smsType","isModalVisible","roles","this","reload","setState","copyConfig","parse","smartthings","appId","appSecret","port","portUI","enabled","status","res","event","message","props","title","dataIndex","key","render","text","type","icon","QuestionCircleOutlined","onClick","Modal","visible","onCancel","footer","window","open","width","src","mask","placeholder","onChange","newValue","target","includes","newState","TextArea","autoSize","minRows","maxRows","style","defaultValue","map","r","Option","checked","e","PoweroffOutlined","min","max","step","stringMode","lang","Paragraph","editable","connectionType","authenticationType","push","showIcon","closable","pagination","columns","getColumns","dataSource","block","disabled","onSaveClick","React","CONTENTS","SmartthingsAddDevice","canSave","id","uuidv4","validation","onActionChange","onActionYearSelectChange","SmartthingsViewDevice","loadingPage","deviceId","updatable","prevProps","onTestClick","device","find","d","danger","onDeleteClick","AddUser","newConfigurations","ViewUser","userId","user","u","SmartthingsSMS","currentHost","secret","Object","keys","command","replace","location","protocol","hostname","portSMS","resp","respHuaweiInst","respHuaweiRecieve","respHuaweiSMS","respHelp","respCodes","unshift","splice","CronSettings","NotificationSettings","notifications","forEach","nk","RemoteCtrlContentHandler","contentPage","RemoteCtrlMain","collapsed","selectorPage","componentId","onCollapse","onSmartThingsSettingClick","onSMSClick","onNotificationClick","onCRONClick","onSmartThingsAddDeviceClick","onAddUsersClick","onSmartThingsViewDeviceClick","onViewUserClick","size","Title","minHeight","collapsible","theme","defaultSelectedKeys","mode","Item","DesktopOutlined","AppstoreAddOutlined","UserOutlined","MessageOutlined","NotificationOutlined","ScheduleOutlined","LogoutOutlined","href","className","padding","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b58796b1.chunk.js","sourcesContent":["export const RussianLabels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Сохранить',\n  settings: 'Настройки',\n  devices: 'Устройства',\n  addDevice: 'Добавить Устройство',\n  users: 'Пользователи',\n  addUser: 'Добавить Пользователя',\n  actionId: 'Действие',\n  deviceLabel: 'Название устройства',\n  cooling10Mins: 'Режим Охлаждения на 10 Мин.',\n  cooling20Mins: 'Режим Охлаждения на 20 Мин.',\n  cooling30Mins: 'Режим Охлаждения на 30 Мин.',\n  windscreen10Mins: 'Обогрев лобового окна на 10 мин.',\n  windscreen20Mins: 'Обогрев лобового окна на 20 мин.',\n  windscreen30Mins: 'Обогрев лобового окна на 30 мин.',\n  heating10Mins: 'Режим Отопителя на 10 мин.',\n  heating20Mins: 'Режим Отопителя на 20 мин.',\n  heating30Mins: 'Режим Отопителя на 30 мин.',\n  airconOn: 'Включить Климат контроль',\n  airconOff: 'Отключить Климат Контроль',\n  headlightsOn: 'Включить Фары',\n  headlightsOff: 'Выключить Фары',\n  parkinglightsOn: 'Включить Парковочные огни',\n  parkinglightsOff: 'Выключить Парковочные огни',\n  username: 'Имя пользователя',\n  password: 'Пароль',\n  delete: 'Удалить',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'MAC адрес',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Протестировать устройство',\n  actionTimeout: 'Максимальное время выполнения ',\n  language: 'Язык',\n  modalHelp: 'Где взять параметр ',\n  modalStep1: '1. Откройте портал ',\n  modalStep2: '2. Выбрать smartapps в вашей локации ',\n  modalStep3: '3. Выберите созданное вами \"remote-ctrl-gsm\" ',\n  modalStep4: '4. Возмите со страницы параметр ',\n  modelYear: 'Год Выпуска PHEV',\n  any: 'Любой',\n  phev2019: '2019',\n  battery: 'Заряд Батареи',\n  updateValue: 'Обновить Текущее Значение',\n  loading: 'Подождите идет загрузка...',\n  batteryFactory: 'Множитель батареи',\n  doors: 'Статус Открытия/Закрытия Дверей',\n  forceUpdate: 'Принудительно обновить модуль',\n  executeUpdate: 'Принудительно обновить перед выполнением',\n  hvac: 'Текущий режим HVAC',\n  sendNotification: 'Отправлять сообщения о состоянии батареи',\n  notification: 'Нотификация',\n  testNotification: 'Проверить отправку сообщений',\n  testNotificationLabel: 'Отправлять Push Уведомления',\n  sms: 'SMS Сервис',\n  smsPassword: 'SMS Пароль',\n  phone: 'Номер мобильного телефона с которого можно слать СМС',\n  phoneHuawei: 'Номер мобильного телефона который будет принимать СМС',\n  huaweiPassword: 'Huawei Авторизация по паролю (Необязательно)',\n  huaweiInstallation: 'Инсталяционный скрипт, пожалуйста запустите от имени root',\n  huaweiRecieveSMS: 'Содержимое файла /opt/modem/recieveSMS.sh',\n  huaweiSMS: 'Содержимое файла /opt/modem/sendSMS.sh',\n  mikrotikScript: 'Mikrotik Script',\n  mikrotikScheduler: 'Mikrotik Scheduler',\n  smsCommands: 'Список поддержуемых SMS операций',\n  smsCar: 'Год Выпуска PHEV в SMS',\n  useSmartthings: 'Использовать Smartthings',\n  smsCodes: 'SMS Коды Ошибок',\n  cron: 'Cron задания',\n  sendSMSNotification: 'Отправлять нотификацию через СМС',\n  theft: 'Активирована ли штатная охранная система сигнализации в ETACS?',\n  Yes: 'Да',\n  No: 'Нет',\n  useCloud: 'отключена Настройка  \"Setup my devices without cloud\" в Smartthings Smartapp',\n  both: 'Оба типа',\n  onlySMS: 'Только СМС',\n  onlyPush: 'Только Push',\n  none: 'Без нотификации',\n  noneSMS: 'Не определено',\n  code: 'Код',\n  description: 'Описание',\n  name: 'Название',\n  value: 'Значение',\n  role: 'Авторизационная Роль',\n  noneRole: 'Без Авторизации',\n  logout: 'Выйти',\n  evseSlow: 'EVSE Медленая зарядка',\n  evseFastCharge: 'EVSE Быстрая зарядка',\n  evseDisableCharge: 'EVSE Отключить зарядку ',\n};\n","import Cookies from 'js-cookie';\nimport { RussianLabels } from './RussianLanguage';\n\nconst Labels = {\n  servicePort: 'Service Port',\n  uiPort: 'UI Port',\n  smartthingsAppId: 'Smartthings Application Id',\n  smartthingsAppSecret: 'Smartthings Application Secret',\n  save: 'Save',\n  settings: 'Settings',\n  devices: 'Devices',\n  addDevice: 'Add Device',\n  users: 'Users',\n  addUser: 'Add User',\n  actionId: 'Action',\n  deviceLabel: 'Device Label',\n  cooling10Mins: 'Cooling Mode 10 Mins',\n  cooling20Mins: 'Cooling Mode 20 Mins',\n  cooling30Mins: 'Cooling Mode 30 Mins',\n  windscreen10Mins: 'Windscreen Mode 10 Mins',\n  windscreen20Mins: 'Windscreen Mode 20 Mins',\n  windscreen30Mins: 'Windscreen Mode 30 Mins',\n  heating10Mins: 'Heating Mode 10 Mins',\n  heating20Mins: 'Heating Mode 20 Mins',\n  heating30Mins: 'Heating Mode 30 Mins',\n  airconOn: 'Air conditioner On',\n  airconOff: 'Air conditioner Off',\n  headlightsOn: 'Headlights On',\n  headlightsOff: 'Headlights Off',\n  parkinglightsOn: 'Parkinglights On',\n  parkinglightsOff: 'Parkinglights Off',\n  username: 'Username',\n  password: 'Password',\n  delete: 'Delete',\n  shard: 'Smartthings Portal Shard',\n  macAddress: 'Outlander PHEV Client Mac Address',\n  keycloakJson: 'Securing Applications using keycloak.json',\n  testDevice: 'Test Action',\n  testNotification: 'Test Notification',\n  actionTimeout: 'Action Timeout',\n  language: 'Language',\n  modalHelp: 'Where to get ',\n  modalStep1: '1. Open ',\n  modalStep2: '2. Select smartapps in your location ',\n  modalStep3: '3. Select your smartapp ',\n  modalStep4: '4. get parameter ',\n  modelYear: 'Model Year',\n  any: 'Any',\n  phev2019: '2019',\n  battery: 'battery',\n  updateValue: 'Update Value',\n  loading: 'Loading...',\n  batteryFactory: 'Battery Factor',\n  doors: 'Doors Status',\n  forceUpdate: 'Force Update',\n  executeUpdate: 'Force Update during update values',\n  hvac: 'Thermostat Operating State',\n  sendNotification: 'Send Push Notification about Battery Warning',\n  notification: 'Notification',\n  testNotificationLabel: 'Send Push Notification',\n  sms: 'SMS API Service',\n  smsPassword: 'SMS Password',\n  mikrotikSMS: 'Mikrotik LTE',\n  huaweiHiLinkSMS: 'Huawei HiLink',\n  phone: 'Authorized mobile phone from which SMS can be sent',\n  phoneHuawei: 'Authorized mobile phone which should receive SMS',\n  huaweiPassword: 'Huawei Password Login(Optional)',\n  huaweiInstallation: 'Installation script (please run under root)',\n  huaweiRecieveSMS: 'Content of the file /opt/modem/recieveSMS.sh',\n  huaweiSMS: 'Content of the file /opt/modem/sendSMS.sh',\n  mikrotikScript: 'Mikrotik Script',\n  mikrotikScheduler: 'Mikrotik Scheduler',\n  smsCommands: 'List of SMS Commands',\n  smsCar: 'Model Year for SMS',\n  useSmartthings: 'Use Smartthings',\n  smsCodes: 'SMS Error Codes',\n  cron: 'Cron Jobs',\n  sendSMSNotification: 'Send notification over SMS',\n  updateDevices: 'Update Devices Job',\n  syncDevices: 'sync Devices between local and Smartthings Job',\n  cloudDevices: 'execute Devices',\n  theft: 'Theft alarm system activated in ETACS ',\n  Yes: 'Yes',\n  No: 'No',\n  useCloud: 'disabled setting \"Setup my devices without cloud\" in Smartthings SmartApp',\n  both: 'Both',\n  onlySMS: 'SMS',\n  onlyPush: 'PUSH',\n  none: 'None',\n  noneSMS: 'None',\n  code: 'Code',\n  description: 'Description',\n  name: 'Name',\n  value: 'Value',\n  role: 'Authorization Role',\n  noneRole: 'Authorization is disabled',\n  logout: 'Logout',\n  evseSlow: 'EVSE Slow Charge',\n  evseFastCharge: 'EVSE Fast Charge',\n  evseDisableCharge: 'EVSE Disable Charger',\n};\n\nexport function getLabels() {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage === 'Russian') {\n    return { ...Labels, ...RussianLabels };\n  }\n  return Labels;\n}\n\nexport function setLanguage(language) {\n  const currentLanguage = Cookies.get('Language');\n  if (currentLanguage !== language) {\n    if (language === 'Russian' || language === 'English') {\n      Cookies.set('Language', language);\n    }\n  }\n}\n","const fetch = require('axios');\n\nconst REACT_BACKEND_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : '';\n\nfunction errorHandler(response) {\n  // eslint-disable-next-line no-console\n  console.error('error:', response.data);\n}\n\nexport function fetchData(url, method = 'GET', headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      headers,\n      transformResponse: (req) => req,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function fetchBackend(url, method = 'GET', headers) {\n  return await fetchData(`${REACT_BACKEND_URL}${url}`, method, headers);\n}\n\nexport function sendData(url, method = 'POST', data, headers) {\n  return new Promise((resolve, reject) => {\n    fetch({\n      url,\n      method,\n      data,\n      transformResponse: (req) => req,\n      headers,\n      withCredentials: true,\n      timeout: 29000,\n    }).then((response) => {\n      resolve(response);\n    }).catch((response) => {\n      errorHandler(response);\n      reject(response);\n    });\n  });\n}\n\nexport async function sendToBackend(url, method = 'POST', data, headers) {\n  const headerMap = headers || {};\n  headerMap['Content-Type'] = 'application/json';\n  return await sendData(`${REACT_BACKEND_URL}${url}`, method, JSON.stringify(data), headerMap);\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Checkbox, Image, InputNumber, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { PoweroffOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport Modal from 'antd/es/modal/Modal';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class SmartthingsSettings extends React.Component {\n    state = {\n      settings: {},\n      servicePort: '',\n      uiPort: '',\n      smartthingsAppId: '',\n      smartthingsAppSecret: '',\n      macAddress: '',\n      actionTimeout: 0,\n      language: 'English',\n      changed: false,\n      loading: false,\n      error: '',\n      keycloakJson: '',\n      executeUpdate: true,\n      sms: true,\n      smsType: 'none',\n      smsPassword: '',\n      sendNotification: true,\n      sendSMSNotification: false,\n      smsCar: 'any',\n      useSmartthings: false,\n      useCloud: false,\n      batteryFactory: 1.0,\n      isModalVisible: false,\n      theft: false,\n      role: '',\n      roles: [],\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        uiPort,\n        servicePort,\n        settings,\n        smartthingsAppId,\n        smartthingsAppSecret,\n        macAddress,\n        keycloakJson,\n        language,\n        actionTimeout,\n        batteryFactory,\n        executeUpdate,\n        sendNotification,\n        smsPassword,\n        sms,\n        smsType,\n        sendSMSNotification,\n        shard,\n        useSmartthings,\n        smsCar,\n        theft,\n        role,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (smartthingsAppId) {\n        copyConfig.smartthings.appId = smartthingsAppId;\n      }\n      if (smartthingsAppSecret) {\n        copyConfig.smartthings.appSecret = smartthingsAppSecret;\n      }\n      if (shard) {\n        copyConfig.smartthings.shard = shard;\n      }\n      if (macAddress) {\n        copyConfig.macAddress = macAddress;\n      }\n      if (servicePort) {\n        copyConfig.port = servicePort;\n      }\n      if (uiPort) {\n        copyConfig.portUI = uiPort;\n      }\n      if (actionTimeout) {\n        copyConfig.smartthings.timeout = actionTimeout;\n      }\n      if (language) {\n        copyConfig.language = language;\n      }\n      if (batteryFactory) {\n        copyConfig.batteryFactory = batteryFactory;\n      }\n      copyConfig.smartthings.sms.enabled = sms;\n      if (smsType) {\n        copyConfig.smartthings.sms.smsType = smsType;\n      }\n      if (smsPassword) {\n        copyConfig.smartthings.sms.password = smsPassword;\n      }\n      if (smsCar) {\n        copyConfig.smartthings.sms.smsCar = smsCar;\n        copyConfig.smartthings.sms.sendSMSNotification = sendSMSNotification;\n      }\n      if (role) {\n        copyConfig.role = role;\n      }\n      copyConfig.smartthings.useSmartthings = useSmartthings;\n      copyConfig.theft = theft;\n      copyConfig.smartthings.executeUpdate = executeUpdate;\n      copyConfig.smartthings.sendNotification = sendNotification;\n      try {\n        let res;\n        let status = { status: 'OK' };\n        if (useSmartthings) {\n          res = await fetchBackend(`/ui/smartthings/check?appId=${smartthingsAppId}&secret=${smartthingsAppSecret}`);\n          status = JSON.parse(res.data);\n        }\n        if (status.status === 'OK') {\n          res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n          status = JSON.parse(res.data);\n          if (status.status === 'OK') {\n            const event = { changed: false };\n            if (keycloakJson) {\n              res = await sendToBackend('/ui/settings/saveKeycloak', 'POST', { keycloakJson });\n              status = JSON.parse(res.data);\n              if (status.status !== 'OK') {\n                event.error = status.message;\n              } else {\n                event.error = '';\n              }\n            }\n            await this.props.reload();\n            await this.reload();\n            this.setState(event);\n          } else {\n            this.setState({ error: status.message });\n          }\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => {\n            if (text === 'smartthingsAppId'\n                || text === 'smartthingsAppSecret') {\n              return (\n                <div>\n                  <a>{getLabels()[text] || text}</a>\n                  <Button\n                    type=\"text\"\n                    icon={<QuestionCircleOutlined />}\n                    onClick={() => {\n                      this.setState({ isModalVisible: true });\n                    }}\n                  />\n                  <Modal\n                    title={getLabels().modalHelp + getLabels()[text] || text}\n                    visible={this.state.isModalVisible}\n                    onCancel={(\n                    ) => { this.setState({ isModalVisible: false }); }}\n                    footer={[\n                      <Button\n                        key=\"ok\"\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({ isModalVisible: false });\n                        }}\n                      >\n                        Ok\n                      </Button>,\n                    ]}\n                  >\n                    <p>\n                      {getLabels().modalStep1}\n                      <Button\n                        type=\"link\"\n                        onClick={() => {\n                          window.open('https://graph.api.smartthings.com', '_blank');\n                        }}\n                      >\n                        https://graph.api.smartthings.com/\n                      </Button>\n                    </p>\n                    <p>{getLabels().modalStep2}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp1.png\"\n                    />\n                    <p>{getLabels().modalStep3}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp2.png\"\n                    />\n                    <p>{getLabels().modalStep4 + getLabels()[text] || text}</p>\n                    <Image\n                      width={400}\n                      src=\"/img/smartapp3.png\"\n                    />\n                  </Modal>\n                </div>\n              );\n            }\n            return <a>{getLabels()[text] || text}</a>;\n          },\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'macAddress') {\n              return (\n                <MaskedInput\n                  mask=\"##:##:##:##:##:##\"\n                  name={getLabels().macAddress || text}\n                  value={value}\n                  placeholder=\"xx:xx:xx:xx:xx:xx\"\n                  onChange={\n                            (newValue) => {\n                              if (newValue.target.value && !newValue.target.value.includes('_')) {\n                                const newState = { changed: true };\n                                newState.macAddress = newValue.target.value;\n                                this.setState(newState);\n                              }\n                            }\n                        }\n                />\n              );\n            }\n            if (data.name === 'keycloakJson') {\n              return (\n                <TextArea\n                  onChange={\n                                (newValue) => {\n                                  if (newValue.target.value) {\n                                    const newState = { changed: true };\n                                    newState.keycloakJson = newValue.target.value;\n                                    this.setState(newState);\n                                  }\n                                }\n                            }\n                  placeholder=\"Keycloak Json\"\n                  autoSize={{ minRows: 3, maxRows: 5 }}\n                />\n              );\n            }\n            if (data.name === 'role') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      role: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.role || 'none'}\n                >\n                  {this.state.roles.map((r) => <Select.Option value={r}>{r}</Select.Option>)}\n                  <Select.Option value=\"none\">{getLabels().noneRole}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'executeUpdate') {\n              return (\n                <Checkbox\n                  checked={this.state.executeUpdate}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.executeUpdate = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'sendNotification') {\n              return (\n                <div>\n                  <Checkbox\n                    checked={this.state.sendNotification}\n                    onChange={(e) => {\n                      const newState = { changed: true };\n                      newState.sendNotification = e.target.checked;\n                      this.setState(newState);\n                    }}\n                  >\n                    {getLabels().testNotificationLabel}\n                  </Checkbox>\n                  <br />\n                  <Button\n                    type=\"primary\"\n                    icon={<PoweroffOutlined />}\n                    loading={this.state.loading}\n                    onClick={async () => {\n                      this.setState({ loading: true });\n                      try {\n                        await sendToBackend('/ui/settings/testNotification', 'POST', { message: 'Test Message' });\n                      } finally {\n                        this.setState({ loading: false });\n                      }\n                    }}\n                  >\n                    {getLabels().testNotification}\n                  </Button>\n                </div>\n              );\n            }\n            if (data.name === 'actionTimeout') {\n              return (\n                <InputNumber\n                  style={{\n                    width: 200,\n                  }}\n                  defaultValue={this.state.actionTimeout}\n                  min=\"0\"\n                  max=\"300000\"\n                  step=\"1000\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue) {\n                            const newState = { changed: true };\n                            newState.actionTimeout = newValue;\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                  stringMode\n                />\n              );\n            }\n            if (data.name === 'batteryFactory') {\n              return (\n                <InputNumber\n                  style={{\n                    width: 200,\n                  }}\n                  defaultValue={this.state.batteryFactory}\n                  min=\"0\"\n                  max=\"10\"\n                  step=\"0.0001\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue) {\n                            const newState = { changed: true };\n                            newState.batteryFactory = newValue;\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                  stringMode\n                />\n              );\n            }\n            if (data.name === 'smsCar') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      smsCar: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.smsCar || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'smsType') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.setState({\n                      smsType: event,\n                      changed: true,\n                    });\n                  }}\n                  defaultValue={this.state.smsType || 'none'}\n                >\n                  <Select.Option value=\"none\">{getLabels().noneSMS}</Select.Option>\n                  <Select.Option value=\"mikrotik\">{getLabels().mikrotikSMS}</Select.Option>\n                  <Select.Option value=\"huaweiHiLink\">{getLabels().huaweiHiLinkSMS}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'sms') {\n              return (\n                <Checkbox\n                  checked={this.state.sms}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.sms = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'theft') {\n              return (\n                <Checkbox\n                  checked={this.state.theft}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.theft = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'sendSMSNotification') {\n              return (\n                <Checkbox\n                  checked={this.state.sendSMSNotification}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.sendSMSNotification = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'useSmartthings') {\n              return (\n                <Checkbox\n                  checked={this.state.useSmartthings}\n                  onChange={(e) => {\n                    const newState = { changed: true };\n                    newState.useSmartthings = e.target.checked;\n                    this.setState(newState);\n                  }}\n                />\n              );\n            }\n            if (data.name === 'useCloud') {\n              return this.state.useCloud ? getLabels().Yes : getLabels().No;\n            }\n            if (data.name === 'language') {\n              return (\n                <Select\n                  defaultValue={this.state.language}\n                  style={{ width: 200 }}\n                  onChange={(lang) => {\n                    this.setState({ language: lang, changed: true });\n                  }}\n                >\n                  <Select.Option value=\"English\">English</Select.Option>\n                  <Select.Option value=\"Russian\">Russian</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      let roles = [];\n      if (settings.data.connectionType === 'keycloak') {\n        const res = await fetchBackend('/ui/keycloak/roles');\n        roles = JSON.parse(res.data);\n      }\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        servicePort: settings.data.port,\n        uiPort: settings.data.portUI,\n        smartthingsAppId: settings.data.smartthings.appId,\n        smartthingsAppSecret: settings.data.smartthings.appSecret,\n        macAddress: settings.data.macAddress,\n        shard: settings.data.smartthings.shard,\n        authenticationType: settings.data.connectionType,\n        actionTimeout: settings.data.smartthings.timeout,\n        batteryFactory: settings.data.batteryFactory || 1.0,\n        language: settings.data.language || 'English',\n        theft: settings.data.theft,\n        executeUpdate: settings.data.smartthings.executeUpdate,\n        sendNotification: settings.data.smartthings.sendNotification,\n        sms: settings.data.smartthings.sms.enabled,\n        smsType: settings.data.smartthings.sms.smsType,\n        smsCar: settings.data.smartthings.sms.smsCar || 'any',\n        smsPassword: settings.data.smartthings.sms.password,\n        useSmartthings: settings.data.smartthings.useSmartthings,\n        useCloud: settings.data.smartthings.useCloud,\n        role: settings.data.role,\n        roles,\n        sendSMSNotification: !!settings.data.smartthings.sms.sendSMSNotification,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, useSmartthings, loading, error, sms, role,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [{\n          name: 'macAddress',\n          value: settings.data.macAddress,\n        }, {\n          name: 'theft',\n          value: settings.data.theft,\n        },\n        {\n          name: 'useSmartthings',\n          value: settings.data.smartthings.useSmartthings,\n        },\n        {\n          name: 'useCloud',\n          value: settings.data.smartthings.useCloud,\n        }];\n        if (useSmartthings) {\n          data.push({\n            name: 'shard',\n            value: settings.data.smartthings.shard,\n          },\n          {\n            name: 'smartthingsAppId',\n            value: settings.data.smartthings.appId,\n          },\n          {\n            name: 'smartthingsAppSecret',\n            value: settings.data.smartthings.appSecret,\n          },\n          {\n            name: 'sendNotification',\n            value: settings.data.smartthings.sendNotification,\n          });\n        }\n\n        data.push(\n          {\n            name: 'keycloakJson',\n            value: '',\n          },\n        );\n        if (settings.data.connectionType === 'keycloak') {\n          data.push(\n            {\n              name: 'role',\n              value: role,\n            },\n          );\n        }\n        data.push({\n          name: 'actionTimeout',\n          value: settings.data.smartthings.timeout,\n        },\n        {\n          name: 'executeUpdate',\n          value: settings.data.smartthings.executeUpdate,\n        },\n        {\n          name: 'language',\n          value: settings.data.language,\n        },\n        {\n          name: 'batteryFactory',\n          value: settings.data.batteryFactory || 1.0,\n        },\n        {\n          name: 'sms',\n          value: settings.data.smartthings.sms.enabled,\n        });\n        if (sms) {\n          data.push({\n            name: 'smsType',\n            value: settings.data.smartthings.sms.smsType || 'none',\n          });\n          data.push({\n            name: 'smsPassword',\n            value: settings.data.smartthings.sms.password,\n          });\n          data.push({\n            name: 'smsCar',\n            value: settings.data.smartthings.sms.smsCar,\n          });\n          data.push({\n            name: 'sendSMSNotification',\n            value: settings.data.smartthings.sms.sendSMSNotification,\n          });\n        }\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","export const CONTENTS = {\n  SmartthingsSettings: 'SMARTTHINGS_SETTINGS',\n  SmartthingsAddDevice: 'SMARTTHINGS_ADD_DEVICE',\n  SmartthingsViewDevice: 'SMARTTHINGS_VIEW_DEVICE',\n  AddUser: 'ADD_USER',\n  ViewUser: 'VIEW_USER',\n  SMS: 'SMS',\n  CRON: 'CRON',\n  NOTIFICATION: 'NOTIFICATION',\n};\n","import * as React from 'react';\nimport {\n  Button, Select, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsAddDevice extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      modelYear: 'any',\n    };\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const id = uuidv4();\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"doors\">{getLabels().doors}</Select.Option>\n                  <Select.Option value=\"hvac\">{getLabels().hvac}</Select.Option>\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                  <Select.Option value=\"forceUpdate\">{getLabels().forceUpdate}</Select.Option>\n                  <Select.Option value=\"evseSlow\">{getLabels().evseSlow}</Select.Option>\n                  <Select.Option value=\"evseFastCharge\">{getLabels().evseFastCharge}</Select.Option>\n                  <Select.Option value=\"evseDisableCharge\">{getLabels().evseDisableCharge}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        actionId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n      ];\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Button, Select, Spin, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class SmartthingsViewDevice extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      deviceLabel: '',\n      actionId: '',\n      deviceId: '',\n      updatable: false,\n      modelYear: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.deviceId !== prevProps.deviceId) {\n        await this.reload();\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteDevice', 'POST', { deviceId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        deviceLabel,\n        actionId,\n        deviceId,\n        modelYear,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/addDevice', 'POST', {\n          id: deviceId, deviceLabel, actionId, modelYear,\n        });\n        await this.props.reload(CONTENTS.SmartthingsViewDevice, deviceId);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onTestClick() {\n      const {\n        deviceId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/testDevice', 'POST', { id: deviceId });\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    onActionYearSelectChange(modelYear) {\n      const { actionId } = this.state;\n      this.setState({\n        modelYear,\n        canSave: this.validation(null, actionId),\n      });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => (\n            <a>\n              {\n            (text === 'testDevice' && this.state.updatable) ? getLabels().updateValue : getLabels()[text] || text\n              }\n            </a>\n          ),\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            if (data.name === 'actionId') {\n              return (\n                <Select\n                  defaultValue={this.state.actionId}\n                  style={{ width: 200 }}\n                  disabled={this.state.updatable}\n                  onChange={(event) => {\n                    this.onActionChange(event);\n                  }}\n                >\n                  <Select.Option value=\"doors\">{getLabels().doors}</Select.Option>\n                  <Select.Option value=\"battery\">{getLabels().battery}</Select.Option>\n                  <Select.Option value=\"hvac\">{getLabels().hvac}</Select.Option>\n                  <Select.Option value=\"airconOn\">{getLabels().airconOn}</Select.Option>\n                  <Select.Option value=\"airconOff\">{getLabels().airconOff}</Select.Option>\n                  <Select.Option value=\"headlightsOn\">{getLabels().headlightsOn}</Select.Option>\n                  <Select.Option value=\"headlightsOff\">{getLabels().headlightsOff}</Select.Option>\n                  <Select.Option value=\"parkinglightsOn\">{getLabels().parkinglightsOn}</Select.Option>\n                  <Select.Option value=\"parkinglightsOff\">{getLabels().parkinglightsOff}</Select.Option>\n                  <Select.Option value=\"cooling10Mins\">{getLabels().cooling10Mins}</Select.Option>\n                  <Select.Option value=\"cooling20Mins\">{getLabels().cooling20Mins}</Select.Option>\n                  <Select.Option value=\"cooling30Mins\">{getLabels().cooling30Mins}</Select.Option>\n                  <Select.Option value=\"windscreen10Mins\">{getLabels().windscreen10Mins}</Select.Option>\n                  <Select.Option value=\"windscreen20Mins\">{getLabels().windscreen20Mins}</Select.Option>\n                  <Select.Option value=\"windscreen30Mins\">{getLabels().windscreen30Mins}</Select.Option>\n                  <Select.Option value=\"heating10Mins\">{getLabels().heating10Mins}</Select.Option>\n                  <Select.Option value=\"heating20Mins\">{getLabels().heating20Mins}</Select.Option>\n                  <Select.Option value=\"heating30Mins\">{getLabels().heating30Mins}</Select.Option>\n                  <Select.Option value=\"forceUpdate\">{getLabels().forceUpdate}</Select.Option>\n                  <Select.Option value=\"evseSlow\">{getLabels().evseSlow}</Select.Option>\n                  <Select.Option value=\"evseFastCharge\">{getLabels().evseFastCharge}</Select.Option>\n                  <Select.Option value=\"evseDisableCharge\">{getLabels().evseDisableCharge}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'modelYear') {\n              return (\n                <Select\n                  style={{ width: 200 }}\n                  onChange={(event) => {\n                    this.onActionYearSelectChange(event);\n                  }}\n                  defaultValue={this.state.modelYear || 'any'}\n                >\n                  <Select.Option value=\"any\">{getLabels().any}</Select.Option>\n                  <Select.Option value=\"2019\">{getLabels().phev2019}</Select.Option>\n                </Select>\n              );\n            }\n            if (data.name === 'deviceId' || data.name === 'deviceLabel') {\n              return value;\n            }\n            if (data.name === 'testDevice') {\n              return (\n                <Button\n                  type=\"primary\"\n                  icon={<PoweroffOutlined />}\n                  loading={this.state.loading}\n                  onClick={() => this.onTestClick()}\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const device = settings.data.smartthings.devices.find((d) => d.id === this.props.deviceId);\n      this.setState({\n        actionId: device.actionId,\n        deviceLabel: device.deviceLabel,\n        deviceId: device.id,\n        modelYear: device.modelYear,\n        updatable: device.updatable,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        loadingPage,\n        canSave,\n        actionId,\n        deviceId,\n        deviceLabel,\n        modelYear,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'deviceId',\n          value: deviceId,\n        },\n        {\n          name: 'deviceLabel',\n          value: deviceLabel,\n        },\n        {\n          name: 'actionId',\n          value: actionId,\n        },\n        {\n          name: 'testDevice',\n          value: '',\n        },\n      ];\n\n      if ([\n        'cooling10Mins',\n        'cooling20Mins',\n        'cooling30Mins',\n        'windscreen10Mins',\n        'windscreen20Mins',\n        'windscreen30Mins',\n        'heating10Mins',\n        'heating20Mins',\n        'heating30Mins',\n      ].includes(actionId)) {\n        data.push({\n          name: 'modelYear',\n          value: modelYear,\n        });\n      }\n\n      return loadingPage ? <Spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getLabels } from '../utils/Localization';\nimport { sendToBackend } from '../utils/restCalls';\n\nexport class AddUser extends React.Component {\n    state = {\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n    };\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = uuidv4();\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const d = {};\n                    d[data.name] = newValue;\n                    const newState = { canSave: this.validation(d) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(data) {\n      return (data.username || this.state.username) && (data.password || this.state.password);\n    }\n\n    render() {\n      const {\n        loading,\n        canSave,\n        username,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Button, Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\nimport { CONTENTS } from './Constants';\n\nexport class ViewUser extends React.Component {\n    state = {\n      loadingPage: false,\n      loading: false,\n      canSave: false,\n      username: '',\n      password: '',\n      userId: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async componentDidUpdate(prevProps) {\n      if (this.props.userId !== prevProps.userId) {\n        await this.reload();\n      }\n    }\n\n    async onSaveClick() {\n      const {\n        username,\n        password,\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        const newConfigurations = {\n          users: [],\n        };\n        const id = userId;\n        newConfigurations.users.push(\n          { id, username, password },\n        );\n        await sendToBackend('/ui/settings', 'POST', newConfigurations);\n        await this.props.reload(CONTENTS.ViewUser, id);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    async onDeleteClick() {\n      const {\n        userId,\n      } = this.state;\n      this.setState({ loading: true });\n      try {\n        await sendToBackend('/ui/settings/deleteUser', 'POST', { userId });\n        await this.props.reload(CONTENTS.SmartthingsSettings);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    onActionChange(actionId) {\n      this.setState({ actionId, canSave: this.validation(null, actionId) });\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return data.name === 'userId' ? value : (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { canSave: this.validation(newValue) };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {data.name === 'password' && value ? '*******' : value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    validation(deviceLabel, actionId) {\n      return (deviceLabel || (this.state.deviceLabel && actionId) || this.state.actionId);\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const user = settings.data.users.find((u) => u.id === this.props.userId);\n      this.setState({\n        username: user.username,\n        password: user.password,\n        userId: user.id,\n        loadingPage: false,\n      });\n    }\n\n    render() {\n      const {\n        loadingPage,\n        loading,\n        canSave,\n        username,\n        userId,\n        password,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'userId',\n          value: userId,\n        },\n        {\n          name: 'username',\n          value: username,\n        },\n        {\n          name: 'password',\n          value: password,\n        },\n      ];\n\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table columns={this.getColumns()} dataSource={data} />\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!canSave}\n            onClick={async () => {\n              await this.onSaveClick();\n            }}\n          >\n            {getLabels().save || 'Save'}\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={loading}\n            block\n            danger\n            onClick={async () => {\n              await this.onDeleteClick();\n            }}\n          >\n            {getLabels().delete || 'Delete'}\n          </Button>\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport { Table } from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport MaskedInput from 'antd-mask-input';\nimport TextArea from 'antd/es/input/TextArea';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend } from '../utils/restCalls';\n\nexport class SmartthingsSMS extends React.Component {\n    state = {\n      loadingPage: true,\n      // eslint-disable-next-line react/no-unused-state\n      settings: null,\n      mikrotikSMS: null,\n      huaweiInstallation: null,\n      huaweiRecieveSMS: null,\n      huaweiSMS: null,\n      smsCommands: null,\n      smsCodes: null,\n      phone: '',\n      huaweiPassword: '',\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            if (data.name === 'phone') {\n              return (\n                <MaskedInput\n                  mask=\"+############\"\n                  name={getLabels().phone}\n                  value={this.state.phone}\n                  placeholder=\"+xxxxxxxxxxxx\"\n                  onChange={\n                          (newValue) => {\n                            if (newValue.target.value && !newValue.target.value.includes('_')) {\n                              const newState = { phone: newValue.target.value };\n                              this.setState(newState);\n                            }\n                          }\n                      }\n                />\n              );\n            }\n            if (data.name === 'phoneHuawei') {\n              return (\n                <MaskedInput\n                  mask=\"+############\"\n                  name={getLabels().phoneHuawei}\n                  value={this.state.phone}\n                  placeholder=\"+xxxxxxxxxxxx\"\n                  onChange={\n                        (newValue) => {\n                          if (newValue.target.value && !newValue.target.value.includes('_')) {\n                            const newState = { phone: newValue.target.value };\n                            this.setState(newState);\n                          }\n                        }\n                      }\n                />\n              );\n            }\n            if (data.name === 'applicationHost') {\n              return this.currentHost();\n            }\n            if (data.name === 'applicationId') {\n              return this.state.settings.data.smartthings.sms.appId;\n            }\n            if (data.name === 'applicationSecret') {\n              return this.state.settings.data.smartthings.sms.secret;\n            }\n            if (data.name === 'smsCodes') {\n              return (\n                <Table\n                  pagination={false}\n                  columns={[\n                    {\n                      title: getLabels().code,\n                      dataIndex: 'name',\n                      key: 'name',\n                    }, {\n                      title: getLabels().description,\n                      dataIndex: 'value',\n                      key: 'value',\n                    }]}\n                  dataSource={\n                         Object.keys(this.state.smsCodes).map((code) => ({\n                           name: code,\n                           value: this.state.smsCodes[code],\n                         }))\n                       }\n                />\n              );\n            }\n            if (data.name === 'smsCommands') {\n              return (\n                <Table\n                  pagination={false}\n                  columns={[{\n                    title: 'Commands',\n                    dataIndex: 'name',\n                    key: 'name',\n                  }]}\n                  dataSource={\n                  this.state.smsCommands.map((command) => ({\n                    name: command,\n                  }))\n                }\n                />\n              );\n            }\n            if (data.name === 'mikrotikScript') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.mikrotikSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiInstallation') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiInstallation\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiRecieveSMS') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiRecieveSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('HUAWEI_PASSWORD', this.state.huaweiPassword || 'My Password')\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            if (data.name === 'huaweiSMS') {\n              return (\n                <TextArea\n                  autoSize={{ minRows: 30, maxRows: 100 }}\n                  value={\n                  this.state.huaweiSMS\n                    .replace('PHONE_NUMBER', this.state.phone)\n                    .replace('CURRENT_HOST', this.currentHost())\n                    .replace('APP_ID', this.state.settings.data.smartthings.sms.appId)\n                    .replace('APP_SECRET', this.state.settings.data.smartthings.sms.secret)\n                }\n                />\n              );\n            }\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = {};\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {text}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    currentHost() {\n      return `${window.location.protocol}//${window.location.hostname}:${this.state.settings.data.portSMS}`;\n    }\n\n    async reload() {\n      this.setState({\n        loadingPage: true,\n      });\n      let settings = null;\n      let mikrotikSMS = null;\n      let huaweiInstallation = null;\n      let huaweiRecieveSMS = null;\n      let huaweiSMS = null;\n      let smsCommands = null;\n      let smsCodes = null;\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        settings = JSON.parse(data);\n        const resp = await fetchBackend('/mikrotikSMS.script');\n        const respHuaweiInst = await fetchBackend('/installation.script');\n        const respHuaweiRecieve = await fetchBackend('/huaweiRecieveSMS.script');\n        const respHuaweiSMS = await fetchBackend('/huaweiSMS.script');\n        const respHelp = await fetchBackend('/ui/sms/help');\n        const respCodes = await fetchBackend('/ui/sms/codes');\n        mikrotikSMS = resp.data;\n        huaweiInstallation = respHuaweiInst.data;\n        huaweiRecieveSMS = respHuaweiRecieve.data;\n        huaweiSMS = respHuaweiSMS.data;\n        smsCommands = JSON.parse(respHelp.data);\n        smsCodes = JSON.parse(respCodes.data);\n      } finally {\n        this.setState({\n          // eslint-disable-next-line react/no-unused-state\n          settings,\n          mikrotikSMS,\n          huaweiInstallation,\n          huaweiRecieveSMS,\n          huaweiSMS,\n          smsCommands,\n          smsCodes,\n          loadingPage: false,\n        });\n      }\n    }\n\n    render() {\n      const {\n        loadingPage,\n        phone,\n        huaweiPassword,\n        settings,\n      } = this.state;\n\n      const data = [\n        {\n          name: 'applicationHost',\n          value: 'applicationHost',\n        },\n        {\n          name: 'applicationId',\n          value: 'applicationId',\n        },\n        {\n          name: 'applicationSecret',\n          value: 'applicationSecret',\n        },\n      ];\n      if (!loadingPage) {\n        if (settings.data.smartthings.sms.smsType === 'mikrotik') {\n          data.unshift({\n            name: 'phone',\n            value: phone,\n          });\n          if (phone) {\n            data.push({\n              name: 'mikrotikScript',\n              value: 'mikrotikScript',\n            });\n          }\n        }\n        if (settings.data.smartthings.sms.smsType === 'huaweiHiLink') {\n          data.unshift({\n            name: 'phoneHuawei',\n            value: phone,\n          });\n          if (phone) {\n            data.splice(1, 0, {\n              name: 'huaweiPassword',\n              value: huaweiPassword,\n            });\n            data.push({\n              name: 'huaweiInstallation',\n              value: 'huaweiInstallation',\n            });\n            data.push({\n              name: 'huaweiRecieveSMS',\n              value: 'huaweiRecieveSMS',\n            });\n            data.push({\n              name: 'huaweiSMS',\n              value: 'huaweiSMS',\n            });\n          }\n        }\n      }\n      data.push({\n        name: 'smsCommands',\n        value: 'smsCommands',\n      });\n      return loadingPage ? <spin /> : (\n        <div>\n          <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n        </div>\n      );\n    }\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Table,\n} from 'antd';\nimport Paragraph from 'antd/es/typography/Paragraph';\nimport { getLabels, setLanguage } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class CronSettings extends React.Component {\n    state = {\n      settings: {},\n      changed: false,\n      error: '',\n      updateDevices: '',\n      syncDevices: '',\n      cloudDevices: '',\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        settings,\n        updateDevices,\n        syncDevices,\n        cloudDevices,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      if (updateDevices) {\n        copyConfig.cron.updateDevices = updateDevices;\n      }\n      if (syncDevices) {\n        copyConfig.cron.syncDevices = syncDevices;\n      }\n      if (cloudDevices) {\n        copyConfig.cron.cloudDevices = cloudDevices;\n      }\n      try {\n        const res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n        const status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          const event = { changed: false };\n          await this.props.reload();\n          await this.reload();\n          this.setState(event);\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().name,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{getLabels()[text] || text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'value',\n          key: 'value',\n          render: (text, data) => {\n            const value = this.state[data.name];\n            return (\n              <Paragraph editable={{\n                onChange: (newValue) => {\n                  if (newValue) {\n                    const newState = { changed: true };\n                    newState[data.name] = newValue;\n                    this.setState(newState);\n                  }\n                },\n              }}\n              >\n                {value}\n              </Paragraph>\n            );\n          },\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      setLanguage(settings.data.language || 'English');\n      this.setState({\n        settings,\n        updateDevices: settings.data.cron.updateDevices,\n        syncDevices: settings.data.cron.syncDevices,\n        cloudDevices: settings.data.cron.cloudDevices,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error,\n      } = this.state;\n      if (settings.status === 'OK') {\n        const data = [{\n          name: 'updateDevices',\n          value: settings.data.cron.updateDevices,\n        },\n        {\n          name: 'syncDevices',\n          value: settings.data.cron.syncDevices,\n        }];\n        if (!settings.data.smartthings.useCloud) {\n          data.push({\n            name: 'cloudDevices',\n            value: settings.data.cron.syncDevices,\n          });\n        }\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","import * as React from 'react';\nimport {\n  Alert, Button, Select, Table,\n} from 'antd';\nimport { getLabels } from '../utils/Localization';\nimport { fetchBackend, sendToBackend } from '../utils/restCalls';\n\nexport class NotificationSettings extends React.Component {\n    state = {\n      settings: {},\n      changed: false,\n      error: '',\n      smsCodes: null,\n      notifications: null,\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    async onSaveClick() {\n      const {\n        settings,\n        notifications,\n      } = this.state;\n      this.setState({ loading: true });\n      const copyConfig = JSON.parse(JSON.stringify(settings.data));\n      copyConfig.notifications = notifications;\n      try {\n        const res = await sendToBackend('/ui/settings', 'POST', copyConfig);\n        const status = JSON.parse(res.data);\n        if (status.status === 'OK') {\n          const event = { changed: false };\n          await this.props.reload();\n          await this.reload();\n          this.setState(event);\n        } else {\n          this.setState({ error: status.message });\n        }\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n\n    getColumns() {\n      return [\n        {\n          title: getLabels().code,\n          dataIndex: 'name',\n          key: 'name',\n          render: (text) => <a>{text}</a>,\n        },\n        {\n          title: getLabels().description,\n          dataIndex: 'description',\n          key: 'description',\n          render: (text) => <a>{text}</a>,\n        },\n        {\n          title: getLabels().value,\n          dataIndex: 'description',\n          key: 'description',\n          render: (text, data) => (\n            <Select\n              style={{ width: 200 }}\n              defaultValue={this.state.notifications[data.name]}\n              onChange={(event) => {\n                if (event) {\n                  const newState = { changed: true };\n                  this.state.notifications[data.name] = event;\n                  newState.notifications = this.state.notifications;\n                  this.setState(newState);\n                }\n              }}\n            >\n              <Select.Option disabled={!this.state.settings.data.smartthings.sendNotification && !this.state.settings.data.smartthings.sms.enabled && !this.state.settings.data.smartthings.sms.sendSMSNotification} value=\"both\">{getLabels().both}</Select.Option>\n              <Select.Option disabled={!this.state.settings.data.smartthings.sms.enabled && !this.state.settings.data.smartthings.sms.sendSMSNotification} value=\"sms\">{getLabels().onlySMS}</Select.Option>\n              <Select.Option disabled={!this.state.settings.data.smartthings.sendNotification} value=\"push\">{getLabels().onlyPush}</Select.Option>\n              <Select.Option value=\"none\">{getLabels().none}</Select.Option>\n\n            </Select>\n          ),\n        },\n      ];\n    }\n\n    async reload() {\n      const { data } = await fetchBackend('/ui/settings');\n      const settings = JSON.parse(data);\n      const respCodes = await fetchBackend('/ui/sms/codes');\n      const smsCodes = JSON.parse(respCodes.data);\n      this.setState({\n        settings,\n        smsCodes,\n        notifications: settings.data.notifications,\n      });\n    }\n\n    render() {\n      const {\n        settings, changed, loading, error, smsCodes, notifications,\n      } = this.state;\n      if (settings.status === 'OK' && smsCodes != null) {\n        const data = [];\n        Object.keys(notifications).forEach((nk) => {\n          data.push({\n            name: nk,\n            status: notifications[nk],\n            description: smsCodes[nk] || getLabels()[nk],\n          });\n        });\n        return (\n          <div>\n            {error ? (\n              <Alert\n                message={error}\n                showIcon\n                type=\"error\"\n                closable\n              />\n            ) : null}\n            <Table pagination={false} columns={this.getColumns()} dataSource={data} />\n            <Button\n              type=\"primary\"\n              loading={loading}\n              block\n              disabled={!changed}\n              onClick={async () => {\n                await this.onSaveClick();\n              }}\n            >\n              {getLabels().save || 'Save'}\n            </Button>\n          </div>\n        );\n      }\n      return null;\n    }\n}\n","import * as React from 'react';\nimport { SmartthingsSettings } from './SmartthingsSettings';\nimport { SmartthingsAddDevice } from './SmartthingsAddDevice';\nimport { SmartthingsViewDevice } from './SmartthingsViewDevice';\nimport { AddUser } from './AddUser';\nimport { ViewUser } from './ViewUser';\nimport { CONTENTS } from './Constants';\nimport { SmartthingsSMS } from './SmartthingsSMS';\nimport { CronSettings } from './CronSettings';\nimport { NotificationSettings } from './NotificationSettings';\n\nexport class RemoteCtrlContentHandler extends React.Component {\n  render() {\n    const contentPage = this.props.name;\n    const { reload } = this.props;\n    const { id } = this.props;\n    if (contentPage === CONTENTS.SmartthingsSettings) {\n      return <SmartthingsSettings reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsAddDevice) {\n      return <SmartthingsAddDevice reload={reload} />;\n    } if (contentPage === CONTENTS.SmartthingsViewDevice) {\n      return <SmartthingsViewDevice reload={reload} deviceId={id} />;\n    } if (contentPage === CONTENTS.AddUser) {\n      return <AddUser reload={reload} />;\n    } if (contentPage === CONTENTS.ViewUser) {\n      return <ViewUser reload={reload} userId={id} />;\n    } if (contentPage === CONTENTS.SMS) {\n      return <SmartthingsSMS />;\n    } if (contentPage === CONTENTS.CRON) {\n      return <CronSettings />;\n    } if (contentPage === CONTENTS.NOTIFICATION) {\n      return <NotificationSettings />;\n    }\n    return null;\n  }\n}\n","import * as React from 'react';\nimport Sider from 'antd/lib/layout/Sider';\nimport { Menu, Spin } from 'antd';\nimport Layout, { Footer, Header } from 'antd/lib/layout/layout';\nimport {\n  AppstoreAddOutlined, DesktopOutlined,\n  LogoutOutlined, MessageOutlined,\n  NotificationOutlined, ScheduleOutlined, UserOutlined,\n} from '@ant-design/icons';\nimport SubMenu from 'antd/lib/menu/SubMenu';\nimport Title from 'antd/es/typography/Title';\nimport { RemoteCtrlContentHandler } from './RemoteCtrlContentHandler';\nimport { fetchBackend } from '../utils/restCalls';\nimport { getLabels } from '../utils/Localization';\nimport { CONTENTS } from './Constants';\n\nexport class RemoteCtrlMain extends React.Component {\n    state = {\n      collapsed: false,\n      selectorPage: null,\n      settings: null,\n      componentId: null,\n      loading: false,\n    };\n\n    async componentDidMount() {\n      await this.reload();\n    }\n\n    reload = async (selectorPage, id) => {\n      this.setState({ loading: true });\n      const newState = {};\n      try {\n        const { data } = await fetchBackend('/ui/settings');\n        let settings = JSON.parse(data);\n        if (settings.data.smartthings.appId && settings.data.smartthings.appSecret) {\n          await fetchBackend('/ui/settings/syncDevices');\n        }\n        const res = await fetchBackend('/ui/settings');\n        settings = JSON.parse(res.data);\n        newState.settings = settings;\n        if (selectorPage) {\n          newState.selectorPage = selectorPage;\n        }\n        if (id) {\n          newState.componentId = id;\n        }\n      } finally {\n        newState.loading = false;\n        this.setState(newState);\n      }\n    }\n\n    onCollapse = (collapsed) => {\n      this.setState({ collapsed });\n    };\n\n    onSmartThingsSettingClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsSettings });\n    };\n\n    onSMSClick = () => {\n      this.setState({ selectorPage: CONTENTS.SMS });\n    };\n\n    onNotificationClick = () => {\n      this.setState({ selectorPage: CONTENTS.NOTIFICATION });\n    };\n\n    onCRONClick = () => {\n      this.setState({ selectorPage: CONTENTS.CRON });\n    };\n\n    onSmartThingsAddDeviceClick = () => {\n      this.setState({ selectorPage: CONTENTS.SmartthingsAddDevice });\n    };\n\n    onAddUsersClick = () => {\n      this.setState({ selectorPage: CONTENTS.AddUser });\n    };\n\n    onSmartThingsViewDeviceClick = (deviceId) => {\n      this.setState({\n        selectorPage: CONTENTS.SmartthingsViewDevice,\n        componentId: deviceId,\n      });\n    };\n\n    onViewUserClick = (userId) => {\n      this.setState({\n        selectorPage: CONTENTS.ViewUser,\n        componentId: userId,\n      });\n    };\n\n    render() {\n      const {\n        collapsed, selectorPage, componentId, settings, loading,\n      } = this.state;\n      return loading ? (\n        <div>\n          <Spin size=\"large\" />\n          <Title>{getLabels().loading}</Title>\n        </div>\n      ) : (\n        <Layout style={{ minHeight: '100vh' }}>\n          <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n              <Menu.Item\n                key=\"1\"\n                icon={<DesktopOutlined />}\n                onClick={this.onSmartThingsSettingClick}\n              >\n                {getLabels().settings}\n              </Menu.Item>\n              <SubMenu key=\"devices\" icon={<AppstoreAddOutlined />} title={getLabels().devices} disabled={!(settings && settings.data.smartthings.useSmartthings && settings.data.smartthings.appId && settings.data.smartthings.appSecret)}>\n                {(settings && settings.data.smartthings.devices)\n                  ? settings.data.smartthings.devices.map((device) => (\n                    <Menu.Item\n                      key={device.id}\n                      onClick={() => {\n                        this.onSmartThingsViewDeviceClick(device.id);\n                      }}\n                    >\n                      {device.deviceLabel}\n                    </Menu.Item>\n                  ))\n                  : null}\n                <Menu.Item\n                  key=\"addDevice\"\n                  onClick={this.onSmartThingsAddDeviceClick}\n                >\n                  {getLabels().addDevice}\n                </Menu.Item>\n              </SubMenu>\n              {\n                        settings && settings.data.connectionType === 'local'\n                          ? (\n                            <SubMenu key=\"sub1\" icon={<UserOutlined />} title={getLabels().users}>\n                              {(settings && settings.data.users)\n                                ? settings.data.users.map((user) => (\n                                  <Menu.Item\n                                    key={user.id}\n                                    onClick={() => {\n                                      this.onViewUserClick(user.id);\n                                    }}\n                                  >\n                                    {user.username}\n                                  </Menu.Item>\n                                ))\n                                : null}\n                              <Menu.Item\n                                key=\"addUser\"\n                                onClick={() => {\n                                  this.onAddUsersClick();\n                                }}\n                              >\n                                {getLabels().addUser}\n                              </Menu.Item>\n                            </SubMenu>\n                          ) : null\n}\n              {\n                    settings && settings.data.smartthings.sms.enabled\n                      ? (\n                        <Menu.Item\n                          key=\"subSMS\"\n                          icon={<MessageOutlined />}\n                          onClick={this.onSMSClick}\n                        >\n                          {getLabels().sms}\n                        </Menu.Item>\n                      ) : null\n                }\n              {\n                    settings && (settings.data.smartthings.sms.sendSMSNotification\n                        || settings.data.smartthings.sendNotification)\n                      ? (\n                        <Menu.Item\n                          key=\"subNotification\"\n                          icon={<NotificationOutlined />}\n                          onClick={this.onNotificationClick}\n                        >\n                          {getLabels().notification}\n                        </Menu.Item>\n                      ) : null\n                }\n              <Menu.Item\n                key=\"subCron\"\n                icon={<ScheduleOutlined />}\n                onClick={this.onCRONClick}\n              >\n                {getLabels().cron}\n              </Menu.Item>\n              {\n                  settings && settings.data.connectionType === 'keycloak'\n                    ? (\n                      <Menu.Item\n                        key=\"subLogout\"\n                        icon={<LogoutOutlined />}\n                        onClick={() => {\n                          window.location.href = '/logout';\n                        }}\n                      >\n                        {getLabels().logout}\n                      </Menu.Item>\n                    ) : null\n                }\n\n            </Menu>\n          </Sider>\n          <Layout className=\"site-layout\">\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <RemoteCtrlContentHandler\n              name={selectorPage || CONTENTS.SmartthingsSettings}\n              id={componentId}\n              reload={this.reload}\n            />\n            <Footer style={{ textAlign: 'center' }}> ©2021 Created by Vasyl Zakharchenko</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n}\n","import './App.css';\nimport { RemoteCtrlMain } from './components/RemoteCtrlMain';\n\nfunction App() {\n  return (\n    <div>\n      <RemoteCtrlMain />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}